{
    "schema": "olm.package",
    "name": "sandboxed-containers-operator",
    "defaultChannel": "stable",
    "icon": {
        "base64data": "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",
        "mediatype": "image/png"
    }
}
{
    "schema": "olm.channel",
    "name": "preview-1.0",
    "package": "sandboxed-containers-operator",
    "entries": [
        {
            "name": "sandboxed-containers-operator.v1.0.2",
            "skipRange": "<1.0.2"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "preview-1.1",
    "package": "sandboxed-containers-operator",
    "entries": [
        {
            "name": "sandboxed-containers-operator.v1.0.2",
            "skipRange": "<1.0.2"
        },
        {
            "name": "sandboxed-containers-operator.v1.1.0",
            "replaces": "sandboxed-containers-operator.v1.0.2"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "stable",
    "package": "sandboxed-containers-operator",
    "entries": [
        {
            "name": "sandboxed-containers-operator.v1.5.0",
            "skipRange": ">=1.1.0 <1.5.0"
        },
        {
            "name": "sandboxed-containers-operator.v1.5.1",
            "replaces": "sandboxed-containers-operator.v1.5.0",
            "skipRange": ">=1.1.0 <1.5.1"
        },
        {
            "name": "sandboxed-containers-operator.v1.5.2",
            "replaces": "sandboxed-containers-operator.v1.5.1",
            "skipRange": ">=1.1.0 <1.5.2"
        },
        {
            "name": "sandboxed-containers-operator.v1.5.3",
            "replaces": "sandboxed-containers-operator.v1.5.2",
            "skipRange": ">=1.1.0 <1.5.3"
        },
        {
            "name": "sandboxed-containers-operator.v1.6.0",
            "replaces": "sandboxed-containers-operator.v1.5.3",
            "skipRange": ">=1.1.0 <1.6.0"
        },
        {
            "name": "sandboxed-containers-operator.v1.7.0",
            "replaces": "sandboxed-containers-operator.v1.6.0",
            "skipRange": ">=1.1.0 <1.7.0"
        },
        {
            "name": "sandboxed-containers-operator.v1.8.1",
            "replaces": "sandboxed-containers-operator.v1.7.0",
            "skipRange": ">=1.1.0 <1.8.1"
        },
        {
            "name": "sandboxed-containers-operator.v1.9.0",
            "replaces": "sandboxed-containers-operator.v1.8.1",
            "skipRange": ">=1.1.0 <1.9.0"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "stable-1.2",
    "package": "sandboxed-containers-operator",
    "entries": [
        {
            "name": "sandboxed-containers-operator.v1.2.2",
            "skipRange": ">=1.1.0 <1.2.2"
        }
    ]
}
{
    "schema": "olm.channel",
    "name": "stable-1.3",
    "package": "sandboxed-containers-operator",
    "entries": [
        {
            "name": "sandboxed-containers-operator.v1.3.3",
            "skipRange": ">=1.1.0 <1.3.3"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "sandboxed-containers-operator.v1.0.2",
    "package": "sandboxed-containers-operator",
    "image": "registry.redhat.io/openshift-sandboxed-containers-tech-preview/osc-operator-bundle@sha256:2808a0397495982b4ea0001ede078803a043d5c9b0285662b08044fe4c11f243",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "kataconfiguration.openshift.io",
                "kind": "KataConfig",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "sandboxed-containers-operator",
                "version": "1.0.2"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift-sandboxed-containers-tech-preview/osc-operator-bundle@sha256:2808a0397495982b4ea0001ede078803a043d5c9b0285662b08044fe4c11f243"
        },
        {
            "name": "osc-rhel8-operator-051bd7f1dad8cc3251430fee32184be8d64077aba78580184cef0255d267bdcf-annotation",
            "image": "registry.redhat.io/openshift-sandboxed-containers-tech-preview/osc-rhel8-operator@sha256:051bd7f1dad8cc3251430fee32184be8d64077aba78580184cef0255d267bdcf"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-sandboxed-containers-tech-preview/osc-rhel8-operator@sha256:c6c589d5e47ba9564c66c84fc2bc7e5e046dae1d56a3dc99d7343f01e42e4d31"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "sandboxed-containers-operator.v1.1.0",
    "package": "sandboxed-containers-operator",
    "image": "registry.redhat.io/openshift-sandboxed-containers-tech-preview/osc-operator-bundle@sha256:a91cee14f47824ce49759628d06bf4e48276e67dae00b50123d3233d78531720",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "kataconfiguration.openshift.io",
                "kind": "KataConfig",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "sandboxed-containers-operator",
                "version": "1.1.0"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift-sandboxed-containers-tech-preview/osc-operator-bundle@sha256:a91cee14f47824ce49759628d06bf4e48276e67dae00b50123d3233d78531720"
        },
        {
            "name": "osc-rhel8-operator-b1e824e126c579db0f56d04c3d1796d82ed033110c6bc923de66d95b67099611-annotation",
            "image": "registry.redhat.io/openshift-sandboxed-containers-tech-preview/osc-rhel8-operator@sha256:b1e824e126c579db0f56d04c3d1796d82ed033110c6bc923de66d95b67099611"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-sandboxed-containers-tech-preview/osc-rhel8-operator@sha256:b1e824e126c579db0f56d04c3d1796d82ed033110c6bc923de66d95b67099611"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "sandboxed-containers-operator.v1.2.2",
    "package": "sandboxed-containers-operator",
    "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:ff2bb666c2696fed365df55de78141a02e372044647b8031e6d06e7583478af4",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "kataconfiguration.openshift.io",
                "kind": "KataConfig",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "sandboxed-containers-operator",
                "version": "1.2.2"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sInNwZWMiOnsiZW5kcG9pbnRzIjpbeyJwb3J0IjoibWV0cmljcyJ9XSwibmFtZXNwYWNlU2VsZWN0b3IiOnsibWF0Y2hOYW1lcyI6WyJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtb3BlcmF0b3IiXX0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibWV0cmljcy1yZWFkZXIifSwicnVsZXMiOlt7Im5vblJlc291cmNlVVJMcyI6WyIvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtb25pdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInNlcnZpY2VzIiwiZW5kcG9pbnRzIiwicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibW9uaXRvci1yb2xlYmluZGluZyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im1vbml0b3Itcm9sZSJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogMjkwZjQ5NDcua2F0YWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImthdGEtcmVzb3VyY2VzLmpzb24iOiJ7XG4gICAgXCJhbm5vdGF0aW9uc1wiOiB7XG4gICAgICBcImxpc3RcIjogW1xuICAgIF1cbiAgfSxcbiAgXCJlZGl0YWJsZVwiOiB0cnVlLFxuICBcImduZXRJZFwiOiBudWxsLFxuICBcImdyYXBoVG9vbHRpcFwiOiAwLFxuICBcImxpbmtzXCI6IFtcblxuICBdLFxuICBcInJlZnJlc2hcIjogXCIxMHNcIixcbiAgXCJyb3dzXCI6IFtcbiAgICB7XG4gICAgICBcImNvbGxhcHNlXCI6IGZhbHNlLFxuICAgICAgXCJoZWlnaHRcIjogXCIyNTBweFwiLFxuICAgICAgXCJwYW5lbHNcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgXCJhbGlhc0NvbG9yc1wiOiB7fSxcbiAgICAgICAgICBcImJhcnNcIjogZmFsc2UsXG4gICAgICAgICAgXCJkYXNoTGVuZ3RoXCI6IDEwLFxuICAgICAgICAgIFwiZGFzaGVzXCI6IGZhbHNlLFxuICAgICAgICAgIFwiZGF0YXNvdXJjZVwiOiBudWxsLFxuICAgICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgICAgICBcImZpZWxkQ29uZmlnXCI6IHtcbiAgICAgICAgICAgIFwiZGVmYXVsdHNcIjoge30sXG4gICAgICAgICAgICBcIm92ZXJyaWRlc1wiOiBbXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJmaWxsXCI6IDEsXG4gICAgICAgICAgXCJmaWxsR3JhZGllbnRcIjogMCxcbiAgICAgICAgICBcImdyaWRQb3NcIjoge1xuICAgICAgICAgICAgXCJoXCI6IDgsXG4gICAgICAgICAgICBcIndcIjogMTIsXG4gICAgICAgICAgICBcInhcIjogMCxcbiAgICAgICAgICAgIFwieVwiOiAxXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcImhpZGRlblNlcmllc1wiOiBmYWxzZSxcbiAgICAgICAgICBcImlkXCI6IDIsXG4gICAgICAgICAgXCJsZWdlbmRcIjoge1xuICAgICAgICAgICAgXCJhdmdcIjogZmFsc2UsXG4gICAgICAgICAgICBcImN1cnJlbnRcIjogZmFsc2UsXG4gICAgICAgICAgICBcIm1heFwiOiBmYWxzZSxcbiAgICAgICAgICAgIFwibWluXCI6IGZhbHNlLFxuICAgICAgICAgICAgXCJzaG93XCI6IHRydWUsXG4gICAgICAgICAgICBcInRvdGFsXCI6IGZhbHNlLFxuICAgICAgICAgICAgXCJ2YWx1ZXNcIjogZmFsc2VcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwibGluZXNcIjogdHJ1ZSxcbiAgICAgICAgICBcImxpbmV3aWR0aFwiOiAxLFxuICAgICAgICAgIFwibnVsbFBvaW50TW9kZVwiOiBcIm51bGxcIixcbiAgICAgICAgICBcIm9wdGlvbnNcIjoge1xuICAgICAgICAgICAgXCJhbGVydFRocmVzaG9sZFwiOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInBlcmNlbnRhZ2VcIjogZmFsc2UsXG4gICAgICAgICAgXCJwbHVnaW5WZXJzaW9uXCI6IFwiNy41LjExXCIsXG4gICAgICAgICAgXCJwb2ludHJhZGl1c1wiOiAyLFxuICAgICAgICAgIFwicG9pbnRzXCI6IGZhbHNlLFxuICAgICAgICAgIFwicmVuZGVyZXJcIjogXCJmbG90XCIsXG4gICAgICAgICAgXCJzZXJpZXNPdmVycmlkZXNcIjogW10sXG4gICAgICAgICAgXCJzcGFjZUxlbmd0aFwiOiAxMCxcbiAgICAgICAgICBcInN0YWNrXCI6IGZhbHNlLFxuICAgICAgICAgIFwic3RlcHBlZExpbmVcIjogZmFsc2UsXG4gICAgICAgICAgXCJ0YXJnZXRzXCI6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgXCJleGVtcGxhclwiOiB0cnVlLFxuICAgICAgICAgICAgICBcImV4cHJcIjogXCJzdW0oY291bnQgYnkoaW5zdGFuY2UpIChrYXRhX2d1ZXN0X2xvYWR7aXRlbT1cXFwibG9hZDFcXFwifSkpXCIsXG4gICAgICAgICAgICAgIFwiaW50ZXJ2YWxcIjogXCJcIixcbiAgICAgICAgICAgICAgXCJsZWdlbmRGb3JtYXRcIjogXCJudW1iZXIgb2YgVk1zXCIsXG4gICAgICAgICAgICAgIFwicmVmSWRcIjogXCJBXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIFwidGhyZXNob2xkc1wiOiBbXSxcbiAgICAgICAgICBcInRpbWVGcm9tXCI6IG51bGwsXG4gICAgICAgICAgXCJ0aW1lUmVnaW9uc1wiOiBbXSxcbiAgICAgICAgICBcInRpbWVTaGlmdFwiOiBudWxsLFxuICAgICAgICAgIFwidGl0bGVcIjogXCJOdW1iZXIgb2YgcnVubmluZyBWTXNcIixcbiAgICAgICAgICBcInRvb2x0aXBcIjoge1xuICAgICAgICAgICAgXCJzaGFyZWRcIjogdHJ1ZSxcbiAgICAgICAgICAgIFwic29ydFwiOiAwLFxuICAgICAgICAgICAgXCJ2YWx1ZV90eXBlXCI6IFwiaW5kaXZpZHVhbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInR5cGVcIjogXCJncmFwaFwiLFxuICAgICAgICAgIFwieGF4aXNcIjoge1xuICAgICAgICAgICAgXCJidWNrZXRzXCI6IG51bGwsXG4gICAgICAgICAgICBcIm1vZGVcIjogXCJ0aW1lXCIsXG4gICAgICAgICAgICBcIm5hbWVcIjogbnVsbCxcbiAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlLFxuICAgICAgICAgICAgXCJ2YWx1ZXNcIjogW11cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwieWF4ZXNcIjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcImZvcm1hdFwiOiBcInNob3J0XCIsXG4gICAgICAgICAgICAgIFwibGFiZWxcIjogbnVsbCxcbiAgICAgICAgICAgICAgXCJsb2dCYXNlXCI6IDEsXG4gICAgICAgICAgICAgIFwibWF4XCI6IG51bGwsXG4gICAgICAgICAgICAgIFwibWluXCI6IG51bGwsXG4gICAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcImZvcm1hdFwiOiBcInNob3J0XCIsXG4gICAgICAgICAgICAgIFwibGFiZWxcIjogbnVsbCxcbiAgICAgICAgICAgICAgXCJsb2dCYXNlXCI6IDEsXG4gICAgICAgICAgICAgIFwibWF4XCI6IG51bGwsXG4gICAgICAgICAgICAgIFwibWluXCI6IG51bGwsXG4gICAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBcInlheGlzXCI6IHtcbiAgICAgICAgICAgIFwiYWxpZ25cIjogZmFsc2UsXG4gICAgICAgICAgICBcImFsaWduTGV2ZWxcIjogbnVsbFxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIFwiYWxpYXNDb2xvcnNcIjoge30sXG4gICAgICAgICAgXCJiYXJzXCI6IGZhbHNlLFxuICAgICAgICAgIFwiZGFzaExlbmd0aFwiOiAxMCxcbiAgICAgICAgICBcImRhc2hlc1wiOiBmYWxzZSxcbiAgICAgICAgICBcImRhdGFzb3VyY2VcIjogbnVsbCxcbiAgICAgICAgICBcImZpZWxkQ29uZmlnXCI6IHtcbiAgICAgICAgICAgIFwiZGVmYXVsdHNcIjoge30sXG4gICAgICAgICAgICBcIm92ZXJyaWRlc1wiOiBbXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJmaWxsXCI6IDEsXG4gICAgICAgICAgXCJmaWxsR3JhZGllbnRcIjogMCxcbiAgICAgICAgICBcImdyaWRQb3NcIjoge1xuICAgICAgICAgICAgXCJoXCI6IDgsXG4gICAgICAgICAgICBcIndcIjogMTIsXG4gICAgICAgICAgICBcInhcIjogMCxcbiAgICAgICAgICAgIFwieVwiOiA5XG4gICAgICAgICAgfSxcbiAgICAgICAgICBcImhpZGRlblNlcmllc1wiOiBmYWxzZSxcbiAgICAgICAgICBcImlkXCI6IDEwLFxuICAgICAgICAgIFwibGVnZW5kXCI6IHtcbiAgICAgICAgICAgIFwiYXZnXCI6IGZhbHNlLFxuICAgICAgICAgICAgXCJjdXJyZW50XCI6IGZhbHNlLFxuICAgICAgICAgICAgXCJtYXhcIjogZmFsc2UsXG4gICAgICAgICAgICBcIm1pblwiOiBmYWxzZSxcbiAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlLFxuICAgICAgICAgICAgXCJ0b3RhbFwiOiBmYWxzZSxcbiAgICAgICAgICAgIFwidmFsdWVzXCI6IGZhbHNlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcImxpbmVzXCI6IHRydWUsXG4gICAgICAgICAgXCJsaW5ld2lkdGhcIjogMSxcbiAgICAgICAgICBcIm51bGxQb2ludE1vZGVcIjogXCJudWxsXCIsXG4gICAgICAgICAgXCJvcHRpb25zXCI6IHtcbiAgICAgICAgICAgIFwiYWxlcnRUaHJlc2hvbGRcIjogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJwZXJjZW50YWdlXCI6IGZhbHNlLFxuICAgICAgICAgIFwicGx1Z2luVmVyc2lvblwiOiBcIjcuNS4xMVwiLFxuICAgICAgICAgIFwicG9pbnRyYWRpdXNcIjogMixcbiAgICAgICAgICBcInBvaW50c1wiOiBmYWxzZSxcbiAgICAgICAgICBcInJlbmRlcmVyXCI6IFwiZmxvdFwiLFxuICAgICAgICAgIFwic2VyaWVzT3ZlcnJpZGVzXCI6IFtdLFxuICAgICAgICAgIFwic3BhY2VMZW5ndGhcIjogMTAsXG4gICAgICAgICAgXCJzdGFja1wiOiBmYWxzZSxcbiAgICAgICAgICBcInN0ZXBwZWRMaW5lXCI6IGZhbHNlLFxuICAgICAgICAgIFwidGFyZ2V0c1wiOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIFwiZXhlbXBsYXJcIjogdHJ1ZSxcbiAgICAgICAgICAgICAgXCJleHByXCI6IFwic3VtIGJ5IChzYW5kYm94X2lkKSAoaXJhdGUoa2F0YV9ndWVzdF9jcHVfdGltZXtjcHU9XFxcInRvdGFsXFxcIiwgIGl0ZW09flxcXCJpcnF8c29mdGlycXxzeXN0ZW18dXNlclxcXCJ9WzVtXSkpXCIsXG4gICAgICAgICAgICAgIFwiaW50ZXJ2YWxcIjogXCJcIixcbiAgICAgICAgICAgICAgXCJsZWdlbmRGb3JtYXRcIjogXCJzYW5kYm94IGlkIHt7c2FuZGJveF9pZH19XCIsXG4gICAgICAgICAgICAgIFwicmVmSWRcIjogXCJBXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIFwidGhyZXNob2xkc1wiOiBbXSxcbiAgICAgICAgICBcInRpbWVGcm9tXCI6IG51bGwsXG4gICAgICAgICAgXCJ0aW1lUmVnaW9uc1wiOiBbXSxcbiAgICAgICAgICBcInRpbWVTaGlmdFwiOiBudWxsLFxuICAgICAgICAgIFwidGl0bGVcIjogXCJDUFUgVXNhZ2UgKHBlciBWTSlcIixcbiAgICAgICAgICBcInRvb2x0aXBcIjoge1xuICAgICAgICAgICAgXCJzaGFyZWRcIjogdHJ1ZSxcbiAgICAgICAgICAgIFwic29ydFwiOiAwLFxuICAgICAgICAgICAgXCJ2YWx1ZV90eXBlXCI6IFwiaW5kaXZpZHVhbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInR5cGVcIjogXCJncmFwaFwiLFxuICAgICAgICAgIFwieGF4aXNcIjoge1xuICAgICAgICAgICAgXCJidWNrZXRzXCI6IG51bGwsXG4gICAgICAgICAgICBcIm1vZGVcIjogXCJ0aW1lXCIsXG4gICAgICAgICAgICBcIm5hbWVcIjogbnVsbCxcbiAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlLFxuICAgICAgICAgICAgXCJ2YWx1ZXNcIjogW11cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwieWF4ZXNcIjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcImZvcm1hdFwiOiBcInNob3J0XCIsXG4gICAgICAgICAgICAgIFwibGFiZWxcIjogbnVsbCxcbiAgICAgICAgICAgICAgXCJsb2dCYXNlXCI6IDEsXG4gICAgICAgICAgICAgIFwibWF4XCI6IG51bGwsXG4gICAgICAgICAgICAgIFwibWluXCI6IG51bGwsXG4gICAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcImZvcm1hdFwiOiBcInNob3J0XCIsXG4gICAgICAgICAgICAgIFwibGFiZWxcIjogbnVsbCxcbiAgICAgICAgICAgICAgXCJsb2dCYXNlXCI6IDEsXG4gICAgICAgICAgICAgIFwibWF4XCI6IG51bGwsXG4gICAgICAgICAgICAgIFwibWluXCI6IG51bGwsXG4gICAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBcInlheGlzXCI6IHtcbiAgICAgICAgICAgIFwiYWxpZ25cIjogZmFsc2UsXG4gICAgICAgICAgICBcImFsaWduTGV2ZWxcIjogbnVsbFxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIFwiYWxpYXNDb2xvcnNcIjoge30sXG4gICAgICAgICAgXCJiYXJzXCI6IGZhbHNlLFxuICAgICAgICAgIFwiZGFzaExlbmd0aFwiOiAxMCxcbiAgICAgICAgICBcImRhc2hlc1wiOiBmYWxzZSxcbiAgICAgICAgICBcImRhdGFzb3VyY2VcIjogbnVsbCxcbiAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICAgICAgXCJmaWVsZENvbmZpZ1wiOiB7XG4gICAgICAgICAgICBcImRlZmF1bHRzXCI6IHt9LFxuICAgICAgICAgICAgXCJvdmVycmlkZXNcIjogW11cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwiZmlsbFwiOiAxLFxuICAgICAgICAgIFwiZmlsbEdyYWRpZW50XCI6IDAsXG4gICAgICAgICAgXCJncmlkUG9zXCI6IHtcbiAgICAgICAgICAgIFwiaFwiOiA4LFxuICAgICAgICAgICAgXCJ3XCI6IDEyLFxuICAgICAgICAgICAgXCJ4XCI6IDAsXG4gICAgICAgICAgICBcInlcIjogMTdcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwiaGlkZGVuU2VyaWVzXCI6IGZhbHNlLFxuICAgICAgICAgIFwiaWRcIjogMTIsXG4gICAgICAgICAgXCJsZWdlbmRcIjoge1xuICAgICAgICAgICAgXCJhdmdcIjogZmFsc2UsXG4gICAgICAgICAgICBcImN1cnJlbnRcIjogZmFsc2UsXG4gICAgICAgICAgICBcIm1heFwiOiBmYWxzZSxcbiAgICAgICAgICAgIFwibWluXCI6IGZhbHNlLFxuICAgICAgICAgICAgXCJzaG93XCI6IHRydWUsXG4gICAgICAgICAgICBcInRvdGFsXCI6IGZhbHNlLFxuICAgICAgICAgICAgXCJ2YWx1ZXNcIjogZmFsc2VcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwibGluZXNcIjogdHJ1ZSxcbiAgICAgICAgICBcImxpbmV3aWR0aFwiOiAxLFxuICAgICAgICAgIFwibnVsbFBvaW50TW9kZVwiOiBcIm51bGxcIixcbiAgICAgICAgICBcIm9wdGlvbnNcIjoge1xuICAgICAgICAgICAgXCJhbGVydFRocmVzaG9sZFwiOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInBlcmNlbnRhZ2VcIjogZmFsc2UsXG4gICAgICAgICAgXCJwbHVnaW5WZXJzaW9uXCI6IFwiNy41LjExXCIsXG4gICAgICAgICAgXCJwb2ludHJhZGl1c1wiOiAyLFxuICAgICAgICAgIFwicG9pbnRzXCI6IGZhbHNlLFxuICAgICAgICAgIFwicmVuZGVyZXJcIjogXCJmbG90XCIsXG4gICAgICAgICAgXCJzZXJpZXNPdmVycmlkZXNcIjogW10sXG4gICAgICAgICAgXCJzcGFjZUxlbmd0aFwiOiAxMCxcbiAgICAgICAgICBcInN0YWNrXCI6IGZhbHNlLFxuICAgICAgICAgIFwic3RlcHBlZExpbmVcIjogZmFsc2UsXG4gICAgICAgICAgXCJ0YXJnZXRzXCI6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgXCJleGVtcGxhclwiOiB0cnVlLFxuICAgICAgICAgICAgICBcImV4cHJcIjogXCIoa2F0YV9ndWVzdF9tZW1pbmZve2l0ZW09XFxcIm1lbV90b3RhbFxcXCJ9IC0gb24oc2FuZGJveF9pZCkga2F0YV9ndWVzdF9tZW1pbmZve2l0ZW09XFxcIm1lbV9mcmVlXFxcIn0pXCIsXG4gICAgICAgICAgICAgIFwiaW50ZXJ2YWxcIjogXCJcIixcbiAgICAgICAgICAgICAgXCJsZWdlbmRGb3JtYXRcIjogXCJzYW5kYm94IGlkIHt7c2FuZGJveF9pZH19XCIsXG4gICAgICAgICAgICAgIFwicmVmSWRcIjogXCJBXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIFwidGhyZXNob2xkc1wiOiBbXSxcbiAgICAgICAgICBcInRpbWVGcm9tXCI6IG51bGwsXG4gICAgICAgICAgXCJ0aW1lUmVnaW9uc1wiOiBbXSxcbiAgICAgICAgICBcInRpbWVTaGlmdFwiOiBudWxsLFxuICAgICAgICAgIFwidGl0bGVcIjogXCJNZW1vcnkgVXNhZ2UgKHBlciBWTSlcIixcbiAgICAgICAgICBcInRvb2x0aXBcIjoge1xuICAgICAgICAgICAgXCJzaGFyZWRcIjogdHJ1ZSxcbiAgICAgICAgICAgIFwic29ydFwiOiAwLFxuICAgICAgICAgICAgXCJ2YWx1ZV90eXBlXCI6IFwiaW5kaXZpZHVhbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInR5cGVcIjogXCJncmFwaFwiLFxuICAgICAgICAgIFwieGF4aXNcIjoge1xuICAgICAgICAgICAgXCJidWNrZXRzXCI6IG51bGwsXG4gICAgICAgICAgICBcIm1vZGVcIjogXCJ0aW1lXCIsXG4gICAgICAgICAgICBcIm5hbWVcIjogbnVsbCxcbiAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlLFxuICAgICAgICAgICAgXCJ2YWx1ZXNcIjogW11cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwieWF4ZXNcIjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcImZvcm1hdFwiOiBcInNob3J0XCIsXG4gICAgICAgICAgICAgIFwibGFiZWxcIjogbnVsbCxcbiAgICAgICAgICAgICAgXCJsb2dCYXNlXCI6IDEsXG4gICAgICAgICAgICAgIFwibWF4XCI6IG51bGwsXG4gICAgICAgICAgICAgIFwibWluXCI6IG51bGwsXG4gICAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcImZvcm1hdFwiOiBcInNob3J0XCIsXG4gICAgICAgICAgICAgIFwibGFiZWxcIjogbnVsbCxcbiAgICAgICAgICAgICAgXCJsb2dCYXNlXCI6IDEsXG4gICAgICAgICAgICAgIFwibWF4XCI6IG51bGwsXG4gICAgICAgICAgICAgIFwibWluXCI6IG51bGwsXG4gICAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBcInlheGlzXCI6IHtcbiAgICAgICAgICAgIFwiYWxpZ25cIjogZmFsc2UsXG4gICAgICAgICAgICBcImFsaWduTGV2ZWxcIjogbnVsbFxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIFwicmVwZWF0XCI6IG51bGwsXG4gICAgICBcInJlcGVhdEl0ZXJhdGlvblwiOiBudWxsLFxuICAgICAgXCJyZXBlYXRSb3dJZFwiOiBudWxsLFxuICAgICAgXCJzaG93VGl0bGVcIjogdHJ1ZSxcbiAgICAgIFwidGl0bGVcIjogXCJLYXRhIFBvZHNcIixcbiAgICAgIFwidGl0bGVTaXplXCI6IFwiaDZcIlxuICAgIH1cbiAgXSxcbiAgXCJzY2hlbWFWZXJzaW9uXCI6IDE0LFxuICBcInN0eWxlXCI6IFwiZGFya1wiLFxuICBcInRhZ3NcIjogW1xuICAgIFwia2F0YS1taXhpblwiXG4gIF0sXG4gIFwidGVtcGxhdGluZ1wiOiB7XG4gICAgXCJsaXN0XCI6IFtdXG4gIH0sXG4gIFwidGltZVwiOiB7XG4gICAgXCJmcm9tXCI6IFwibm93LTZoXCIsXG4gICAgXCJ0b1wiOiBcIm5vd1wiXG4gIH0sXG4gIFwidGltZXBpY2tlclwiOiB7fSxcbiAgXCJ0aW1lem9uZVwiOiBcIlwiLFxuICBcInRpdGxlXCI6IFwiU2FuZGJveGVkIENvbnRhaW5lcnNcIixcbiAgXCJ1aWRcIjogXCJhYWNOMldoN2tcIixcbiAgXCJ2ZXJzaW9uXCI6IDFcbn0ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJjb25zb2xlLm9wZW5zaGlmdC5pby9kYXNoYm9hcmQiOiJ0cnVlIn0sIm5hbWUiOiJncmFmYW5hLWRhc2hib2FyZC1zYW5kYm94ZWQtY29udGFpbmVycyJ9fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc3ZjIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjg0NDMsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6Imh0dHBzIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sIm5hbWUiOiJtZXRyaWNzIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJtZXRyaWNzIiwicG9ydCI6ODA5MCwicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjowfV0sInNlbGVjdG9yIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoid2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im1vbml0b3IifX0="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:ff2bb666c2696fed365df55de78141a02e372044647b8031e6d06e7583478af4"
        },
        {
            "name": "osc-rhel8-operator-8f30a9129d817c3f4e404d2c43fb47e196d8c8da3badba4c48f65d440a4d7584-annotation",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-rhel8-operator@sha256:8f30a9129d817c3f4e404d2c43fb47e196d8c8da3badba4c48f65d440a4d7584"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-rhel8-operator@sha256:a660f0b54b9139bed9a3aeef3408001c0d50ba60648364a98a09059b466fbcc1"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "sandboxed-containers-operator.v1.3.3",
    "package": "sandboxed-containers-operator",
    "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:8da62ba1c19c905bc1b87a6233ead475b047a766dc2acb7569149ac5cfe7f0f1",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "kataconfiguration.openshift.io",
                "kind": "KataConfig",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "sandboxed-containers-operator",
                "version": "1.3.3"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlByb21ldGhldXNSdWxlIiwibWV0YWRhdGEiOnsibmFtZSI6InByb21ldGhldXMtc2FuZGJveGVkLWNvbnRhaW5lcnMtcnVsZXMifSwic3BlYyI6eyJncm91cHMiOlt7Im5hbWUiOiJrYXRhX21vbml0b3JfcnVsZXMiLCJydWxlcyI6W3siZXhwciI6InN1bShrYXRhX21vbml0b3JfcnVubmluZ19zaGltX2NvdW50KSIsInJlY29yZCI6ImNsdXN0ZXI6a2F0YV9tb25pdG9yX3J1bm5pbmdfc2hpbV9jb3VudDpzdW0ifV19XX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sInNwZWMiOnsiZW5kcG9pbnRzIjpbeyJwb3J0IjoibWV0cmljcyJ9XSwibmFtZXNwYWNlU2VsZWN0b3IiOnsibWF0Y2hOYW1lcyI6WyJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtb3BlcmF0b3IiXX0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibWV0cmljcy1yZWFkZXIifSwicnVsZXMiOlt7Im5vblJlc291cmNlVVJMcyI6WyIvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtb25pdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInNlcnZpY2VzIiwiZW5kcG9pbnRzIiwicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibW9uaXRvci1yb2xlYmluZGluZyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im1vbml0b3Itcm9sZSJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogMjkwZjQ5NDcua2F0YWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc3ZjIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjg0NDMsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6Imh0dHBzIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sIm5hbWUiOiJtZXRyaWNzIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJtZXRyaWNzIiwicG9ydCI6ODA5MCwicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjowfV0sInNlbGVjdG9yIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoid2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im1vbml0b3IifX0="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:8da62ba1c19c905bc1b87a6233ead475b047a766dc2acb7569149ac5cfe7f0f1"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-rhel8-operator@sha256:5d2b03721043e5221dfb0cf164cf59eba396ba3aae40a56c53aa3496c625eea0"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:cb836456974e510eb4bccbffadbc6d99d5f57c36caec54c767a158ffd8a025d5"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "sandboxed-containers-operator.v1.5.0",
    "package": "sandboxed-containers-operator",
    "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:e51e8c3e5fc5fc24c1488303e2d92adf101813d1593add947558336c40127dc4",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPod",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPodConfig",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kataconfiguration.openshift.io",
                "kind": "KataConfig",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "sandboxed-containers-operator",
                "version": "1.5.0"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kY29uZmlncy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZENvbmZpZyIsImxpc3RLaW5kIjoiUGVlclBvZENvbmZpZ0xpc3QiLCJwbHVyYWwiOiJwZWVycG9kY29uZmlncyIsInNpbmd1bGFyIjoicGVlcnBvZGNvbmZpZyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RDb25maWcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2Rjb25maWdzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZENvbmZpZ1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kQ29uZmlnIiwicHJvcGVydGllcyI6eyJjbG91ZFNlY3JldE5hbWUiOnsiZGVmYXVsdCI6InBlZXItcG9kcy1zZWNyZXQiLCJkZXNjcmlwdGlvbiI6IkNsb3VkU2VjcmV0TmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgc2VjcmV0IHRoYXQgaG9sZHMgdGhlIGNyZWRlbnRpYWxzIGZvciB0aGUgY2xvdWQgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImNvbmZpZ01hcE5hbWUiOnsiZGVmYXVsdCI6InBlZXItcG9kcy1jbSIsImRlc2NyaXB0aW9uIjoiQ29uZmlnTWFwTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgY29uZmlnbWFwIHRoYXQgaG9sZHMgY2xvdWQgcHJvdmlkZXIgc3BlY2lmaWMgZW52aXJvbm1lbnQgVmFyaWFibGVzIiwidHlwZSI6InN0cmluZyJ9LCJpbnN0YW5jZVR5cGUiOnsiZGVzY3JpcHRpb24iOiJJbnN0YW5jZVR5cGUgZGVzY3JpYmVzIHRoZSBuYW1lIG9mIHRoZSBpbnN0YW5jZSB0eXBlIG9mIHRoZSBjaG9zZW4gY2xvdWQgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImxpbWl0Ijp7ImRlc2NyaXB0aW9uIjoiTGltaXQgaXMgdGhlIG1heCBudW1iZXIgb2YgcGVlciBwb2RzLiBUaGlzIGlzIGV4cG9zZWQgYXMgZXh0ZW5kZWQgcmVzb3VyY2Ugb24gbm9kZXMiLCJ0eXBlIjoic3RyaW5nIn0sIm5vZGVTZWxlY3RvciI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiTm9kZVNlbGVjdG9yIHNlbGVjdHMgdGhlIG5vZGVzIG9uIHdoaWNoIHRvIHJ1biB0aGUgY2xvdWQtYXBpLWFkYXB0b3IgcG9kcyIsInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImNsb3VkU2VjcmV0TmFtZSIsImNvbmZpZ01hcE5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJQZWVyUG9kQ29uZmlnU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFBlZXJQb2RDb25maWciLCJwcm9wZXJ0aWVzIjp7InNldHVwQ29tcGxldGVkIjp7ImRlc2NyaXB0aW9uIjoiU2V0dXBDb21wbGV0ZWQgaXMgc2V0IHRvIHRydWUgd2hlbiBhbGwgY29tcG9uZW50cyBoYXZlIGJlZW4gZGVwbG95ZWQvY3JlYXRlZCIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kcy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZCIsImxpc3RLaW5kIjoiUGVlclBvZExpc3QiLCJwbHVyYWwiOiJwZWVycG9kcyIsInNpbmd1bGFyIjoicGVlcnBvZCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2QgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2RzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kIiwicHJvcGVydGllcyI6eyJjbG91ZFByb3ZpZGVyIjp7InR5cGUiOiJzdHJpbmcifSwiaW5zdGFuY2VJRCI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUGVlclBvZCIsInByb3BlcnRpZXMiOnsiY2xlYW5kIjp7InR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlByb21ldGhldXNSdWxlIiwibWV0YWRhdGEiOnsibmFtZSI6InByb21ldGhldXMtc2FuZGJveGVkLWNvbnRhaW5lcnMtcnVsZXMifSwic3BlYyI6eyJncm91cHMiOlt7Im5hbWUiOiJrYXRhX21vbml0b3JfcnVsZXMiLCJydWxlcyI6W3siZXhwciI6InN1bShrYXRhX21vbml0b3JfcnVubmluZ19zaGltX2NvdW50KSIsInJlY29yZCI6ImNsdXN0ZXI6a2F0YV9tb25pdG9yX3J1bm5pbmdfc2hpbV9jb3VudDpzdW0ifV19XX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sInNwZWMiOnsiZW5kcG9pbnRzIjpbeyJwb3J0IjoibWV0cmljcyJ9XSwibmFtZXNwYWNlU2VsZWN0b3IiOnsibWF0Y2hOYW1lcyI6WyJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtb3BlcmF0b3IiXX0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibWV0cmljcy1yZWFkZXIifSwicnVsZXMiOlt7Im5vblJlc291cmNlVVJMcyI6WyIvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtb25pdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInNlcnZpY2VzIiwiZW5kcG9pbnRzIiwicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibW9uaXRvci1yb2xlYmluZGluZyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im1vbml0b3Itcm9sZSJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogMjkwZjQ5NDcua2F0YWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc3ZjIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjg0NDMsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6Imh0dHBzIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sIm5hbWUiOiJtZXRyaWNzIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJtZXRyaWNzIiwicG9ydCI6ODA5MCwicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjowfV0sInNlbGVjdG9yIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoid2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im1vbml0b3IifX0="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "caa",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-rhel9@sha256:e019aab1ccdcc8e2715a2b28e97c91593b09482a0e386818233696d53db50169"
        },
        {
            "name": "peerpods_webhook",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-webhook-rhel9@sha256:5fcfb830c241e138c80cb861a0b2eb30adf4cc01cc1d97498184f25687efdea3"
        },
        {
            "name": "kata_monitor",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-monitor-rhel9@sha256:399a26d78ad52ed98171573b3750da7524e344bce8057bece91e951be1c854d9"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:e51e8c3e5fc5fc24c1488303e2d92adf101813d1593add947558336c40127dc4"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-rhel9-operator@sha256:ce162893d62e6cc436a1f08dc873bbe012ad644c48eef167eb90be45222225c1"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:97cade2c1ee468261aec5400728c8d44de387b459134aec7a4c3b5ec5a335d2c"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "sandboxed-containers-operator.v1.5.1",
    "package": "sandboxed-containers-operator",
    "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:3e1f6c1b475783a9c40fa75a77e4ba5192f042dda225f0288333849a7457a810",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPod",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPodConfig",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kataconfiguration.openshift.io",
                "kind": "KataConfig",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "sandboxed-containers-operator",
                "version": "1.5.1"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kY29uZmlncy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZENvbmZpZyIsImxpc3RLaW5kIjoiUGVlclBvZENvbmZpZ0xpc3QiLCJwbHVyYWwiOiJwZWVycG9kY29uZmlncyIsInNpbmd1bGFyIjoicGVlcnBvZGNvbmZpZyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RDb25maWcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2Rjb25maWdzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZENvbmZpZ1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kQ29uZmlnIiwicHJvcGVydGllcyI6eyJjbG91ZFNlY3JldE5hbWUiOnsiZGVmYXVsdCI6InBlZXItcG9kcy1zZWNyZXQiLCJkZXNjcmlwdGlvbiI6IkNsb3VkU2VjcmV0TmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgc2VjcmV0IHRoYXQgaG9sZHMgdGhlIGNyZWRlbnRpYWxzIGZvciB0aGUgY2xvdWQgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImNvbmZpZ01hcE5hbWUiOnsiZGVmYXVsdCI6InBlZXItcG9kcy1jbSIsImRlc2NyaXB0aW9uIjoiQ29uZmlnTWFwTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgY29uZmlnbWFwIHRoYXQgaG9sZHMgY2xvdWQgcHJvdmlkZXIgc3BlY2lmaWMgZW52aXJvbm1lbnQgVmFyaWFibGVzIiwidHlwZSI6InN0cmluZyJ9LCJpbnN0YW5jZVR5cGUiOnsiZGVzY3JpcHRpb24iOiJJbnN0YW5jZVR5cGUgZGVzY3JpYmVzIHRoZSBuYW1lIG9mIHRoZSBpbnN0YW5jZSB0eXBlIG9mIHRoZSBjaG9zZW4gY2xvdWQgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImxpbWl0Ijp7ImRlc2NyaXB0aW9uIjoiTGltaXQgaXMgdGhlIG1heCBudW1iZXIgb2YgcGVlciBwb2RzLiBUaGlzIGlzIGV4cG9zZWQgYXMgZXh0ZW5kZWQgcmVzb3VyY2Ugb24gbm9kZXMiLCJ0eXBlIjoic3RyaW5nIn0sIm5vZGVTZWxlY3RvciI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiTm9kZVNlbGVjdG9yIHNlbGVjdHMgdGhlIG5vZGVzIG9uIHdoaWNoIHRvIHJ1biB0aGUgY2xvdWQtYXBpLWFkYXB0b3IgcG9kcyIsInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImNsb3VkU2VjcmV0TmFtZSIsImNvbmZpZ01hcE5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJQZWVyUG9kQ29uZmlnU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFBlZXJQb2RDb25maWciLCJwcm9wZXJ0aWVzIjp7InNldHVwQ29tcGxldGVkIjp7ImRlc2NyaXB0aW9uIjoiU2V0dXBDb21wbGV0ZWQgaXMgc2V0IHRvIHRydWUgd2hlbiBhbGwgY29tcG9uZW50cyBoYXZlIGJlZW4gZGVwbG95ZWQvY3JlYXRlZCIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kcy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZCIsImxpc3RLaW5kIjoiUGVlclBvZExpc3QiLCJwbHVyYWwiOiJwZWVycG9kcyIsInNpbmd1bGFyIjoicGVlcnBvZCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2QgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2RzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kIiwicHJvcGVydGllcyI6eyJjbG91ZFByb3ZpZGVyIjp7InR5cGUiOiJzdHJpbmcifSwiaW5zdGFuY2VJRCI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUGVlclBvZCIsInByb3BlcnRpZXMiOnsiY2xlYW5kIjp7InR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlByb21ldGhldXNSdWxlIiwibWV0YWRhdGEiOnsibmFtZSI6InByb21ldGhldXMtc2FuZGJveGVkLWNvbnRhaW5lcnMtcnVsZXMifSwic3BlYyI6eyJncm91cHMiOlt7Im5hbWUiOiJrYXRhX21vbml0b3JfcnVsZXMiLCJydWxlcyI6W3siZXhwciI6InN1bShrYXRhX21vbml0b3JfcnVubmluZ19zaGltX2NvdW50KSIsInJlY29yZCI6ImNsdXN0ZXI6a2F0YV9tb25pdG9yX3J1bm5pbmdfc2hpbV9jb3VudDpzdW0ifV19XX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sInNwZWMiOnsiZW5kcG9pbnRzIjpbeyJwb3J0IjoibWV0cmljcyJ9XSwibmFtZXNwYWNlU2VsZWN0b3IiOnsibWF0Y2hOYW1lcyI6WyJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtb3BlcmF0b3IiXX0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibWV0cmljcy1yZWFkZXIifSwicnVsZXMiOlt7Im5vblJlc291cmNlVVJMcyI6WyIvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtb25pdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInNlcnZpY2VzIiwiZW5kcG9pbnRzIiwicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibW9uaXRvci1yb2xlYmluZGluZyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im1vbml0b3Itcm9sZSJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogMjkwZjQ5NDcua2F0YWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImthdGEtcmVzb3VyY2VzLmpzb24iOiJ7XG4gICAgXCJhbm5vdGF0aW9uc1wiOiB7XG4gICAgICBcImxpc3RcIjogW1xuICAgIF1cbiAgfSxcbiAgXCJlZGl0YWJsZVwiOiB0cnVlLFxuICBcImduZXRJZFwiOiBudWxsLFxuICBcImdyYXBoVG9vbHRpcFwiOiAwLFxuICBcImxpbmtzXCI6IFtcblxuICBdLFxuICBcInJlZnJlc2hcIjogXCIxMHNcIixcbiAgXCJyb3dzXCI6IFtcbiAgICB7XG4gICAgICBcImNvbGxhcHNlXCI6IGZhbHNlLFxuICAgICAgXCJoZWlnaHRcIjogXCIyNTBweFwiLFxuICAgICAgXCJwYW5lbHNcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgXCJhbGlhc0NvbG9yc1wiOiB7fSxcbiAgICAgICAgICBcImJhcnNcIjogZmFsc2UsXG4gICAgICAgICAgXCJkYXNoTGVuZ3RoXCI6IDEwLFxuICAgICAgICAgIFwiZGFzaGVzXCI6IGZhbHNlLFxuICAgICAgICAgIFwiZGF0YXNvdXJjZVwiOiBudWxsLFxuICAgICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcbiAgICAgICAgICBcImZpZWxkQ29uZmlnXCI6IHtcbiAgICAgICAgICAgIFwiZGVmYXVsdHNcIjoge30sXG4gICAgICAgICAgICBcIm92ZXJyaWRlc1wiOiBbXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJmaWxsXCI6IDEsXG4gICAgICAgICAgXCJmaWxsR3JhZGllbnRcIjogMCxcbiAgICAgICAgICBcImdyaWRQb3NcIjoge1xuICAgICAgICAgICAgXCJoXCI6IDgsXG4gICAgICAgICAgICBcIndcIjogMTIsXG4gICAgICAgICAgICBcInhcIjogMCxcbiAgICAgICAgICAgIFwieVwiOiAxXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcImhpZGRlblNlcmllc1wiOiBmYWxzZSxcbiAgICAgICAgICBcImlkXCI6IDIsXG4gICAgICAgICAgXCJsZWdlbmRcIjoge1xuICAgICAgICAgICAgXCJhdmdcIjogZmFsc2UsXG4gICAgICAgICAgICBcImN1cnJlbnRcIjogZmFsc2UsXG4gICAgICAgICAgICBcIm1heFwiOiBmYWxzZSxcbiAgICAgICAgICAgIFwibWluXCI6IGZhbHNlLFxuICAgICAgICAgICAgXCJzaG93XCI6IHRydWUsXG4gICAgICAgICAgICBcInRvdGFsXCI6IGZhbHNlLFxuICAgICAgICAgICAgXCJ2YWx1ZXNcIjogZmFsc2VcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwibGluZXNcIjogdHJ1ZSxcbiAgICAgICAgICBcImxpbmV3aWR0aFwiOiAxLFxuICAgICAgICAgIFwibnVsbFBvaW50TW9kZVwiOiBcIm51bGxcIixcbiAgICAgICAgICBcIm9wdGlvbnNcIjoge1xuICAgICAgICAgICAgXCJhbGVydFRocmVzaG9sZFwiOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInBlcmNlbnRhZ2VcIjogZmFsc2UsXG4gICAgICAgICAgXCJwbHVnaW5WZXJzaW9uXCI6IFwiNy41LjExXCIsXG4gICAgICAgICAgXCJwb2ludHJhZGl1c1wiOiAyLFxuICAgICAgICAgIFwicG9pbnRzXCI6IGZhbHNlLFxuICAgICAgICAgIFwicmVuZGVyZXJcIjogXCJmbG90XCIsXG4gICAgICAgICAgXCJzZXJpZXNPdmVycmlkZXNcIjogW10sXG4gICAgICAgICAgXCJzcGFjZUxlbmd0aFwiOiAxMCxcbiAgICAgICAgICBcInN0YWNrXCI6IGZhbHNlLFxuICAgICAgICAgIFwic3RlcHBlZExpbmVcIjogZmFsc2UsXG4gICAgICAgICAgXCJ0YXJnZXRzXCI6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgXCJleGVtcGxhclwiOiB0cnVlLFxuICAgICAgICAgICAgICBcImV4cHJcIjogXCJzdW0oY291bnQgYnkoaW5zdGFuY2UpIChrYXRhX2d1ZXN0X2xvYWR7aXRlbT1cXFwibG9hZDFcXFwifSkpXCIsXG4gICAgICAgICAgICAgIFwiaW50ZXJ2YWxcIjogXCJcIixcbiAgICAgICAgICAgICAgXCJsZWdlbmRGb3JtYXRcIjogXCJudW1iZXIgb2YgVk1zXCIsXG4gICAgICAgICAgICAgIFwicmVmSWRcIjogXCJBXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIFwidGhyZXNob2xkc1wiOiBbXSxcbiAgICAgICAgICBcInRpbWVGcm9tXCI6IG51bGwsXG4gICAgICAgICAgXCJ0aW1lUmVnaW9uc1wiOiBbXSxcbiAgICAgICAgICBcInRpbWVTaGlmdFwiOiBudWxsLFxuICAgICAgICAgIFwidGl0bGVcIjogXCJOdW1iZXIgb2YgcnVubmluZyBWTXNcIixcbiAgICAgICAgICBcInRvb2x0aXBcIjoge1xuICAgICAgICAgICAgXCJzaGFyZWRcIjogdHJ1ZSxcbiAgICAgICAgICAgIFwic29ydFwiOiAwLFxuICAgICAgICAgICAgXCJ2YWx1ZV90eXBlXCI6IFwiaW5kaXZpZHVhbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInR5cGVcIjogXCJncmFwaFwiLFxuICAgICAgICAgIFwieGF4aXNcIjoge1xuICAgICAgICAgICAgXCJidWNrZXRzXCI6IG51bGwsXG4gICAgICAgICAgICBcIm1vZGVcIjogXCJ0aW1lXCIsXG4gICAgICAgICAgICBcIm5hbWVcIjogbnVsbCxcbiAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlLFxuICAgICAgICAgICAgXCJ2YWx1ZXNcIjogW11cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwieWF4ZXNcIjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcImZvcm1hdFwiOiBcInNob3J0XCIsXG4gICAgICAgICAgICAgIFwibGFiZWxcIjogbnVsbCxcbiAgICAgICAgICAgICAgXCJsb2dCYXNlXCI6IDEsXG4gICAgICAgICAgICAgIFwibWF4XCI6IG51bGwsXG4gICAgICAgICAgICAgIFwibWluXCI6IG51bGwsXG4gICAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcImZvcm1hdFwiOiBcInNob3J0XCIsXG4gICAgICAgICAgICAgIFwibGFiZWxcIjogbnVsbCxcbiAgICAgICAgICAgICAgXCJsb2dCYXNlXCI6IDEsXG4gICAgICAgICAgICAgIFwibWF4XCI6IG51bGwsXG4gICAgICAgICAgICAgIFwibWluXCI6IG51bGwsXG4gICAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBcInlheGlzXCI6IHtcbiAgICAgICAgICAgIFwiYWxpZ25cIjogZmFsc2UsXG4gICAgICAgICAgICBcImFsaWduTGV2ZWxcIjogbnVsbFxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIFwiYWxpYXNDb2xvcnNcIjoge30sXG4gICAgICAgICAgXCJiYXJzXCI6IGZhbHNlLFxuICAgICAgICAgIFwiZGFzaExlbmd0aFwiOiAxMCxcbiAgICAgICAgICBcImRhc2hlc1wiOiBmYWxzZSxcbiAgICAgICAgICBcImRhdGFzb3VyY2VcIjogbnVsbCxcbiAgICAgICAgICBcImZpZWxkQ29uZmlnXCI6IHtcbiAgICAgICAgICAgIFwiZGVmYXVsdHNcIjoge30sXG4gICAgICAgICAgICBcIm92ZXJyaWRlc1wiOiBbXVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJmaWxsXCI6IDEsXG4gICAgICAgICAgXCJmaWxsR3JhZGllbnRcIjogMCxcbiAgICAgICAgICBcImdyaWRQb3NcIjoge1xuICAgICAgICAgICAgXCJoXCI6IDgsXG4gICAgICAgICAgICBcIndcIjogMTIsXG4gICAgICAgICAgICBcInhcIjogMCxcbiAgICAgICAgICAgIFwieVwiOiA5XG4gICAgICAgICAgfSxcbiAgICAgICAgICBcImhpZGRlblNlcmllc1wiOiBmYWxzZSxcbiAgICAgICAgICBcImlkXCI6IDEwLFxuICAgICAgICAgIFwibGVnZW5kXCI6IHtcbiAgICAgICAgICAgIFwiYXZnXCI6IGZhbHNlLFxuICAgICAgICAgICAgXCJjdXJyZW50XCI6IGZhbHNlLFxuICAgICAgICAgICAgXCJtYXhcIjogZmFsc2UsXG4gICAgICAgICAgICBcIm1pblwiOiBmYWxzZSxcbiAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlLFxuICAgICAgICAgICAgXCJ0b3RhbFwiOiBmYWxzZSxcbiAgICAgICAgICAgIFwidmFsdWVzXCI6IGZhbHNlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcImxpbmVzXCI6IHRydWUsXG4gICAgICAgICAgXCJsaW5ld2lkdGhcIjogMSxcbiAgICAgICAgICBcIm51bGxQb2ludE1vZGVcIjogXCJudWxsXCIsXG4gICAgICAgICAgXCJvcHRpb25zXCI6IHtcbiAgICAgICAgICAgIFwiYWxlcnRUaHJlc2hvbGRcIjogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJwZXJjZW50YWdlXCI6IGZhbHNlLFxuICAgICAgICAgIFwicGx1Z2luVmVyc2lvblwiOiBcIjcuNS4xMVwiLFxuICAgICAgICAgIFwicG9pbnRyYWRpdXNcIjogMixcbiAgICAgICAgICBcInBvaW50c1wiOiBmYWxzZSxcbiAgICAgICAgICBcInJlbmRlcmVyXCI6IFwiZmxvdFwiLFxuICAgICAgICAgIFwic2VyaWVzT3ZlcnJpZGVzXCI6IFtdLFxuICAgICAgICAgIFwic3BhY2VMZW5ndGhcIjogMTAsXG4gICAgICAgICAgXCJzdGFja1wiOiBmYWxzZSxcbiAgICAgICAgICBcInN0ZXBwZWRMaW5lXCI6IGZhbHNlLFxuICAgICAgICAgIFwidGFyZ2V0c1wiOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIFwiZXhlbXBsYXJcIjogdHJ1ZSxcbiAgICAgICAgICAgICAgXCJleHByXCI6IFwic3VtIGJ5IChzYW5kYm94X2lkKSAoaXJhdGUoa2F0YV9ndWVzdF9jcHVfdGltZXtjcHU9XFxcInRvdGFsXFxcIiwgIGl0ZW09flxcXCJpcnF8c29mdGlycXxzeXN0ZW18dXNlclxcXCJ9WzVtXSkpXCIsXG4gICAgICAgICAgICAgIFwiaW50ZXJ2YWxcIjogXCJcIixcbiAgICAgICAgICAgICAgXCJsZWdlbmRGb3JtYXRcIjogXCJzYW5kYm94IGlkIHt7c2FuZGJveF9pZH19XCIsXG4gICAgICAgICAgICAgIFwicmVmSWRcIjogXCJBXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIFwidGhyZXNob2xkc1wiOiBbXSxcbiAgICAgICAgICBcInRpbWVGcm9tXCI6IG51bGwsXG4gICAgICAgICAgXCJ0aW1lUmVnaW9uc1wiOiBbXSxcbiAgICAgICAgICBcInRpbWVTaGlmdFwiOiBudWxsLFxuICAgICAgICAgIFwidGl0bGVcIjogXCJDUFUgVXNhZ2UgKHBlciBWTSlcIixcbiAgICAgICAgICBcInRvb2x0aXBcIjoge1xuICAgICAgICAgICAgXCJzaGFyZWRcIjogdHJ1ZSxcbiAgICAgICAgICAgIFwic29ydFwiOiAwLFxuICAgICAgICAgICAgXCJ2YWx1ZV90eXBlXCI6IFwiaW5kaXZpZHVhbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInR5cGVcIjogXCJncmFwaFwiLFxuICAgICAgICAgIFwieGF4aXNcIjoge1xuICAgICAgICAgICAgXCJidWNrZXRzXCI6IG51bGwsXG4gICAgICAgICAgICBcIm1vZGVcIjogXCJ0aW1lXCIsXG4gICAgICAgICAgICBcIm5hbWVcIjogbnVsbCxcbiAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlLFxuICAgICAgICAgICAgXCJ2YWx1ZXNcIjogW11cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwieWF4ZXNcIjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcImZvcm1hdFwiOiBcInNob3J0XCIsXG4gICAgICAgICAgICAgIFwibGFiZWxcIjogbnVsbCxcbiAgICAgICAgICAgICAgXCJsb2dCYXNlXCI6IDEsXG4gICAgICAgICAgICAgIFwibWF4XCI6IG51bGwsXG4gICAgICAgICAgICAgIFwibWluXCI6IG51bGwsXG4gICAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcImZvcm1hdFwiOiBcInNob3J0XCIsXG4gICAgICAgICAgICAgIFwibGFiZWxcIjogbnVsbCxcbiAgICAgICAgICAgICAgXCJsb2dCYXNlXCI6IDEsXG4gICAgICAgICAgICAgIFwibWF4XCI6IG51bGwsXG4gICAgICAgICAgICAgIFwibWluXCI6IG51bGwsXG4gICAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBcInlheGlzXCI6IHtcbiAgICAgICAgICAgIFwiYWxpZ25cIjogZmFsc2UsXG4gICAgICAgICAgICBcImFsaWduTGV2ZWxcIjogbnVsbFxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIFwiYWxpYXNDb2xvcnNcIjoge30sXG4gICAgICAgICAgXCJiYXJzXCI6IGZhbHNlLFxuICAgICAgICAgIFwiZGFzaExlbmd0aFwiOiAxMCxcbiAgICAgICAgICBcImRhc2hlc1wiOiBmYWxzZSxcbiAgICAgICAgICBcImRhdGFzb3VyY2VcIjogbnVsbCxcbiAgICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXG4gICAgICAgICAgXCJmaWVsZENvbmZpZ1wiOiB7XG4gICAgICAgICAgICBcImRlZmF1bHRzXCI6IHt9LFxuICAgICAgICAgICAgXCJvdmVycmlkZXNcIjogW11cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwiZmlsbFwiOiAxLFxuICAgICAgICAgIFwiZmlsbEdyYWRpZW50XCI6IDAsXG4gICAgICAgICAgXCJncmlkUG9zXCI6IHtcbiAgICAgICAgICAgIFwiaFwiOiA4LFxuICAgICAgICAgICAgXCJ3XCI6IDEyLFxuICAgICAgICAgICAgXCJ4XCI6IDAsXG4gICAgICAgICAgICBcInlcIjogMTdcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwiaGlkZGVuU2VyaWVzXCI6IGZhbHNlLFxuICAgICAgICAgIFwiaWRcIjogMTIsXG4gICAgICAgICAgXCJsZWdlbmRcIjoge1xuICAgICAgICAgICAgXCJhdmdcIjogZmFsc2UsXG4gICAgICAgICAgICBcImN1cnJlbnRcIjogZmFsc2UsXG4gICAgICAgICAgICBcIm1heFwiOiBmYWxzZSxcbiAgICAgICAgICAgIFwibWluXCI6IGZhbHNlLFxuICAgICAgICAgICAgXCJzaG93XCI6IHRydWUsXG4gICAgICAgICAgICBcInRvdGFsXCI6IGZhbHNlLFxuICAgICAgICAgICAgXCJ2YWx1ZXNcIjogZmFsc2VcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwibGluZXNcIjogdHJ1ZSxcbiAgICAgICAgICBcImxpbmV3aWR0aFwiOiAxLFxuICAgICAgICAgIFwibnVsbFBvaW50TW9kZVwiOiBcIm51bGxcIixcbiAgICAgICAgICBcIm9wdGlvbnNcIjoge1xuICAgICAgICAgICAgXCJhbGVydFRocmVzaG9sZFwiOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInBlcmNlbnRhZ2VcIjogZmFsc2UsXG4gICAgICAgICAgXCJwbHVnaW5WZXJzaW9uXCI6IFwiNy41LjExXCIsXG4gICAgICAgICAgXCJwb2ludHJhZGl1c1wiOiAyLFxuICAgICAgICAgIFwicG9pbnRzXCI6IGZhbHNlLFxuICAgICAgICAgIFwicmVuZGVyZXJcIjogXCJmbG90XCIsXG4gICAgICAgICAgXCJzZXJpZXNPdmVycmlkZXNcIjogW10sXG4gICAgICAgICAgXCJzcGFjZUxlbmd0aFwiOiAxMCxcbiAgICAgICAgICBcInN0YWNrXCI6IGZhbHNlLFxuICAgICAgICAgIFwic3RlcHBlZExpbmVcIjogZmFsc2UsXG4gICAgICAgICAgXCJ0YXJnZXRzXCI6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgXCJleGVtcGxhclwiOiB0cnVlLFxuICAgICAgICAgICAgICBcImV4cHJcIjogXCIoa2F0YV9ndWVzdF9tZW1pbmZve2l0ZW09XFxcIm1lbV90b3RhbFxcXCJ9IC0gb24oc2FuZGJveF9pZCkga2F0YV9ndWVzdF9tZW1pbmZve2l0ZW09XFxcIm1lbV9mcmVlXFxcIn0pXCIsXG4gICAgICAgICAgICAgIFwiaW50ZXJ2YWxcIjogXCJcIixcbiAgICAgICAgICAgICAgXCJsZWdlbmRGb3JtYXRcIjogXCJzYW5kYm94IGlkIHt7c2FuZGJveF9pZH19XCIsXG4gICAgICAgICAgICAgIFwicmVmSWRcIjogXCJBXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIFwidGhyZXNob2xkc1wiOiBbXSxcbiAgICAgICAgICBcInRpbWVGcm9tXCI6IG51bGwsXG4gICAgICAgICAgXCJ0aW1lUmVnaW9uc1wiOiBbXSxcbiAgICAgICAgICBcInRpbWVTaGlmdFwiOiBudWxsLFxuICAgICAgICAgIFwidGl0bGVcIjogXCJNZW1vcnkgVXNhZ2UgKHBlciBWTSlcIixcbiAgICAgICAgICBcInRvb2x0aXBcIjoge1xuICAgICAgICAgICAgXCJzaGFyZWRcIjogdHJ1ZSxcbiAgICAgICAgICAgIFwic29ydFwiOiAwLFxuICAgICAgICAgICAgXCJ2YWx1ZV90eXBlXCI6IFwiaW5kaXZpZHVhbFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInR5cGVcIjogXCJncmFwaFwiLFxuICAgICAgICAgIFwieGF4aXNcIjoge1xuICAgICAgICAgICAgXCJidWNrZXRzXCI6IG51bGwsXG4gICAgICAgICAgICBcIm1vZGVcIjogXCJ0aW1lXCIsXG4gICAgICAgICAgICBcIm5hbWVcIjogbnVsbCxcbiAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlLFxuICAgICAgICAgICAgXCJ2YWx1ZXNcIjogW11cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwieWF4ZXNcIjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcImZvcm1hdFwiOiBcInNob3J0XCIsXG4gICAgICAgICAgICAgIFwibGFiZWxcIjogbnVsbCxcbiAgICAgICAgICAgICAgXCJsb2dCYXNlXCI6IDEsXG4gICAgICAgICAgICAgIFwibWF4XCI6IG51bGwsXG4gICAgICAgICAgICAgIFwibWluXCI6IG51bGwsXG4gICAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcImZvcm1hdFwiOiBcInNob3J0XCIsXG4gICAgICAgICAgICAgIFwibGFiZWxcIjogbnVsbCxcbiAgICAgICAgICAgICAgXCJsb2dCYXNlXCI6IDEsXG4gICAgICAgICAgICAgIFwibWF4XCI6IG51bGwsXG4gICAgICAgICAgICAgIFwibWluXCI6IG51bGwsXG4gICAgICAgICAgICAgIFwic2hvd1wiOiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBcInlheGlzXCI6IHtcbiAgICAgICAgICAgIFwiYWxpZ25cIjogZmFsc2UsXG4gICAgICAgICAgICBcImFsaWduTGV2ZWxcIjogbnVsbFxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIFwicmVwZWF0XCI6IG51bGwsXG4gICAgICBcInJlcGVhdEl0ZXJhdGlvblwiOiBudWxsLFxuICAgICAgXCJyZXBlYXRSb3dJZFwiOiBudWxsLFxuICAgICAgXCJzaG93VGl0bGVcIjogdHJ1ZSxcbiAgICAgIFwidGl0bGVcIjogXCJLYXRhIFBvZHNcIixcbiAgICAgIFwidGl0bGVTaXplXCI6IFwiaDZcIlxuICAgIH1cbiAgXSxcbiAgXCJzY2hlbWFWZXJzaW9uXCI6IDE0LFxuICBcInN0eWxlXCI6IFwiZGFya1wiLFxuICBcInRhZ3NcIjogW1xuICAgIFwia2F0YS1taXhpblwiXG4gIF0sXG4gIFwidGVtcGxhdGluZ1wiOiB7XG4gICAgXCJsaXN0XCI6IFtdXG4gIH0sXG4gIFwidGltZVwiOiB7XG4gICAgXCJmcm9tXCI6IFwibm93LTZoXCIsXG4gICAgXCJ0b1wiOiBcIm5vd1wiXG4gIH0sXG4gIFwidGltZXBpY2tlclwiOiB7fSxcbiAgXCJ0aW1lem9uZVwiOiBcIlwiLFxuICBcInRpdGxlXCI6IFwiU2FuZGJveGVkIENvbnRhaW5lcnNcIixcbiAgXCJ1aWRcIjogXCJhYWNOMldoN2tcIixcbiAgXCJ2ZXJzaW9uXCI6IDFcbn0ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJjb25zb2xlLm9wZW5zaGlmdC5pby9kYXNoYm9hcmQiOiJ0cnVlIn0sIm5hbWUiOiJncmFmYW5hLWRhc2hib2FyZC1zYW5kYm94ZWQtY29udGFpbmVycyJ9fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc3ZjIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjg0NDMsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6Imh0dHBzIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sIm5hbWUiOiJtZXRyaWNzIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJtZXRyaWNzIiwicG9ydCI6ODA5MCwicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjowfV0sInNlbGVjdG9yIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoid2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im1vbml0b3IifX0="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "caa",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-rhel9@sha256:c6c79548af11059de87ae53ccd6a785fe24bc1d24b4b33cab5bbf56350c3a26d"
        },
        {
            "name": "peerpods_webhook",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-webhook-rhel9@sha256:cc9857a1aaae502c533920709c71b93c9af9878a5a3478b24e6b489ba3f72abc"
        },
        {
            "name": "kata_monitor",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-monitor-rhel9@sha256:7ea161001256beeb1de762c432a0f6cec052aec6d0226a1ceb51215ae988206a"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:3e1f6c1b475783a9c40fa75a77e4ba5192f042dda225f0288333849a7457a810"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-rhel9-operator@sha256:eb92aaee855b014b9b382a54a81e93353f052767dc7167e0f387547ab59b89ab"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f11f71448986aa17abec9caadb568a6cc34ef1a7898e6dc20bc6a512830ba476"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "sandboxed-containers-operator.v1.5.2",
    "package": "sandboxed-containers-operator",
    "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:94242bcaeb70f40d450104651b66ac4d6c5b3eb97bc6f97c3db9f6d94bed95d1",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPod",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPodConfig",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kataconfiguration.openshift.io",
                "kind": "KataConfig",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "sandboxed-containers-operator",
                "version": "1.5.2"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kY29uZmlncy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZENvbmZpZyIsImxpc3RLaW5kIjoiUGVlclBvZENvbmZpZ0xpc3QiLCJwbHVyYWwiOiJwZWVycG9kY29uZmlncyIsInNpbmd1bGFyIjoicGVlcnBvZGNvbmZpZyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RDb25maWcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2Rjb25maWdzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZENvbmZpZ1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kQ29uZmlnIiwicHJvcGVydGllcyI6eyJjbG91ZFNlY3JldE5hbWUiOnsiZGVmYXVsdCI6InBlZXItcG9kcy1zZWNyZXQiLCJkZXNjcmlwdGlvbiI6IkNsb3VkU2VjcmV0TmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgc2VjcmV0IHRoYXQgaG9sZHMgdGhlIGNyZWRlbnRpYWxzIGZvciB0aGUgY2xvdWQgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImNvbmZpZ01hcE5hbWUiOnsiZGVmYXVsdCI6InBlZXItcG9kcy1jbSIsImRlc2NyaXB0aW9uIjoiQ29uZmlnTWFwTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgY29uZmlnbWFwIHRoYXQgaG9sZHMgY2xvdWQgcHJvdmlkZXIgc3BlY2lmaWMgZW52aXJvbm1lbnQgVmFyaWFibGVzIiwidHlwZSI6InN0cmluZyJ9LCJpbnN0YW5jZVR5cGUiOnsiZGVzY3JpcHRpb24iOiJJbnN0YW5jZVR5cGUgZGVzY3JpYmVzIHRoZSBuYW1lIG9mIHRoZSBpbnN0YW5jZSB0eXBlIG9mIHRoZSBjaG9zZW4gY2xvdWQgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImxpbWl0Ijp7ImRlc2NyaXB0aW9uIjoiTGltaXQgaXMgdGhlIG1heCBudW1iZXIgb2YgcGVlciBwb2RzLiBUaGlzIGlzIGV4cG9zZWQgYXMgZXh0ZW5kZWQgcmVzb3VyY2Ugb24gbm9kZXMiLCJ0eXBlIjoic3RyaW5nIn0sIm5vZGVTZWxlY3RvciI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiTm9kZVNlbGVjdG9yIHNlbGVjdHMgdGhlIG5vZGVzIG9uIHdoaWNoIHRvIHJ1biB0aGUgY2xvdWQtYXBpLWFkYXB0b3IgcG9kcyIsInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImNsb3VkU2VjcmV0TmFtZSIsImNvbmZpZ01hcE5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJQZWVyUG9kQ29uZmlnU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFBlZXJQb2RDb25maWciLCJwcm9wZXJ0aWVzIjp7InNldHVwQ29tcGxldGVkIjp7ImRlc2NyaXB0aW9uIjoiU2V0dXBDb21wbGV0ZWQgaXMgc2V0IHRvIHRydWUgd2hlbiBhbGwgY29tcG9uZW50cyBoYXZlIGJlZW4gZGVwbG95ZWQvY3JlYXRlZCIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kcy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZCIsImxpc3RLaW5kIjoiUGVlclBvZExpc3QiLCJwbHVyYWwiOiJwZWVycG9kcyIsInNpbmd1bGFyIjoicGVlcnBvZCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2QgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2RzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kIiwicHJvcGVydGllcyI6eyJjbG91ZFByb3ZpZGVyIjp7InR5cGUiOiJzdHJpbmcifSwiaW5zdGFuY2VJRCI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUGVlclBvZCIsInByb3BlcnRpZXMiOnsiY2xlYW5kIjp7InR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlByb21ldGhldXNSdWxlIiwibWV0YWRhdGEiOnsibmFtZSI6InByb21ldGhldXMtc2FuZGJveGVkLWNvbnRhaW5lcnMtcnVsZXMifSwic3BlYyI6eyJncm91cHMiOlt7Im5hbWUiOiJrYXRhX21vbml0b3JfcnVsZXMiLCJydWxlcyI6W3siZXhwciI6InN1bShrYXRhX21vbml0b3JfcnVubmluZ19zaGltX2NvdW50KSIsInJlY29yZCI6ImNsdXN0ZXI6a2F0YV9tb25pdG9yX3J1bm5pbmdfc2hpbV9jb3VudDpzdW0ifV19XX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sInNwZWMiOnsiZW5kcG9pbnRzIjpbeyJwb3J0IjoibWV0cmljcyJ9XSwibmFtZXNwYWNlU2VsZWN0b3IiOnsibWF0Y2hOYW1lcyI6WyJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtb3BlcmF0b3IiXX0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibWV0cmljcy1yZWFkZXIifSwicnVsZXMiOlt7Im5vblJlc291cmNlVVJMcyI6WyIvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtb25pdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInNlcnZpY2VzIiwiZW5kcG9pbnRzIiwicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibW9uaXRvci1yb2xlYmluZGluZyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im1vbml0b3Itcm9sZSJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogMjkwZjQ5NDcua2F0YWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc3ZjIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjg0NDMsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6Imh0dHBzIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sIm5hbWUiOiJtZXRyaWNzIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJtZXRyaWNzIiwicG9ydCI6ODA5MCwicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjowfV0sInNlbGVjdG9yIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoid2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im1vbml0b3IifX0="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "caa",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-rhel9@sha256:532398dc576b0972025ec7bcd2dcc3550a70040b721c567fef1d1421b0af93fd"
        },
        {
            "name": "peerpods_webhook",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-webhook-rhel9@sha256:92276802bcddcdfcf86e08f8db2d2e0e3c33564788f40644b0facbd1a0ec7fd6"
        },
        {
            "name": "kata_monitor",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-monitor-rhel9@sha256:789475fad3aebeeea44d326055624a15ae1da93ae069a9e7698d2a4c89ce02b2"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:94242bcaeb70f40d450104651b66ac4d6c5b3eb97bc6f97c3db9f6d94bed95d1"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-rhel9-operator@sha256:5b33130845b4ef704ca8aed2973394768ee396bd958ee516bfc29d034a7be156"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:62c44057a27abd41cf3daf60b8736da59a82dadb65fa6c32bef65d19bd49ea49"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "sandboxed-containers-operator.v1.5.3",
    "package": "sandboxed-containers-operator",
    "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:c19bc8e134b41ebac75312d72213b2eccccf96a8f6029bf530f0606b7c3f0e3e",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPod",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPodConfig",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kataconfiguration.openshift.io",
                "kind": "KataConfig",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "sandboxed-containers-operator",
                "version": "1.5.3"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kY29uZmlncy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZENvbmZpZyIsImxpc3RLaW5kIjoiUGVlclBvZENvbmZpZ0xpc3QiLCJwbHVyYWwiOiJwZWVycG9kY29uZmlncyIsInNpbmd1bGFyIjoicGVlcnBvZGNvbmZpZyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RDb25maWcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2Rjb25maWdzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZENvbmZpZ1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kQ29uZmlnIiwicHJvcGVydGllcyI6eyJjbG91ZFNlY3JldE5hbWUiOnsiZGVmYXVsdCI6InBlZXItcG9kcy1zZWNyZXQiLCJkZXNjcmlwdGlvbiI6IkNsb3VkU2VjcmV0TmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgc2VjcmV0IHRoYXQgaG9sZHMgdGhlIGNyZWRlbnRpYWxzIGZvciB0aGUgY2xvdWQgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImNvbmZpZ01hcE5hbWUiOnsiZGVmYXVsdCI6InBlZXItcG9kcy1jbSIsImRlc2NyaXB0aW9uIjoiQ29uZmlnTWFwTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgY29uZmlnbWFwIHRoYXQgaG9sZHMgY2xvdWQgcHJvdmlkZXIgc3BlY2lmaWMgZW52aXJvbm1lbnQgVmFyaWFibGVzIiwidHlwZSI6InN0cmluZyJ9LCJpbnN0YW5jZVR5cGUiOnsiZGVzY3JpcHRpb24iOiJJbnN0YW5jZVR5cGUgZGVzY3JpYmVzIHRoZSBuYW1lIG9mIHRoZSBpbnN0YW5jZSB0eXBlIG9mIHRoZSBjaG9zZW4gY2xvdWQgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImxpbWl0Ijp7ImRlc2NyaXB0aW9uIjoiTGltaXQgaXMgdGhlIG1heCBudW1iZXIgb2YgcGVlciBwb2RzLiBUaGlzIGlzIGV4cG9zZWQgYXMgZXh0ZW5kZWQgcmVzb3VyY2Ugb24gbm9kZXMiLCJ0eXBlIjoic3RyaW5nIn0sIm5vZGVTZWxlY3RvciI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiTm9kZVNlbGVjdG9yIHNlbGVjdHMgdGhlIG5vZGVzIG9uIHdoaWNoIHRvIHJ1biB0aGUgY2xvdWQtYXBpLWFkYXB0b3IgcG9kcyIsInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImNsb3VkU2VjcmV0TmFtZSIsImNvbmZpZ01hcE5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJQZWVyUG9kQ29uZmlnU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFBlZXJQb2RDb25maWciLCJwcm9wZXJ0aWVzIjp7InNldHVwQ29tcGxldGVkIjp7ImRlc2NyaXB0aW9uIjoiU2V0dXBDb21wbGV0ZWQgaXMgc2V0IHRvIHRydWUgd2hlbiBhbGwgY29tcG9uZW50cyBoYXZlIGJlZW4gZGVwbG95ZWQvY3JlYXRlZCIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kcy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZCIsImxpc3RLaW5kIjoiUGVlclBvZExpc3QiLCJwbHVyYWwiOiJwZWVycG9kcyIsInNpbmd1bGFyIjoicGVlcnBvZCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2QgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2RzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kIiwicHJvcGVydGllcyI6eyJjbG91ZFByb3ZpZGVyIjp7InR5cGUiOiJzdHJpbmcifSwiaW5zdGFuY2VJRCI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUGVlclBvZCIsInByb3BlcnRpZXMiOnsiY2xlYW5kIjp7InR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlByb21ldGhldXNSdWxlIiwibWV0YWRhdGEiOnsibmFtZSI6InByb21ldGhldXMtc2FuZGJveGVkLWNvbnRhaW5lcnMtcnVsZXMifSwic3BlYyI6eyJncm91cHMiOlt7Im5hbWUiOiJrYXRhX21vbml0b3JfcnVsZXMiLCJydWxlcyI6W3siZXhwciI6InN1bShrYXRhX21vbml0b3JfcnVubmluZ19zaGltX2NvdW50KSIsInJlY29yZCI6ImNsdXN0ZXI6a2F0YV9tb25pdG9yX3J1bm5pbmdfc2hpbV9jb3VudDpzdW0ifV19XX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sInNwZWMiOnsiZW5kcG9pbnRzIjpbeyJwb3J0IjoibWV0cmljcyJ9XSwibmFtZXNwYWNlU2VsZWN0b3IiOnsibWF0Y2hOYW1lcyI6WyJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtb3BlcmF0b3IiXX0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibWV0cmljcy1yZWFkZXIifSwicnVsZXMiOlt7Im5vblJlc291cmNlVVJMcyI6WyIvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtb25pdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInNlcnZpY2VzIiwiZW5kcG9pbnRzIiwicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibW9uaXRvci1yb2xlYmluZGluZyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im1vbml0b3Itcm9sZSJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogMjkwZjQ5NDcua2F0YWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc3ZjIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjg0NDMsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6Imh0dHBzIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sIm5hbWUiOiJtZXRyaWNzIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJtZXRyaWNzIiwicG9ydCI6ODA5MCwicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjowfV0sInNlbGVjdG9yIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoid2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im1vbml0b3IifX0="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "caa",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-rhel9@sha256:922cc1dcaf459a8df430cf959b68c934c87074b71e85918c086a127dc29a4aae"
        },
        {
            "name": "peerpods_webhook",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-webhook-rhel9@sha256:8071f29d07857cd55b22918ea696651934ac9eb8074687c5e8904d752dea8a05"
        },
        {
            "name": "kata_monitor",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-monitor-rhel9@sha256:0f17d17a4d5a4535f734bc769c9a10db9073c202a023687aeb4aa80a498ab462"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:c19bc8e134b41ebac75312d72213b2eccccf96a8f6029bf530f0606b7c3f0e3e"
        },
        {
            "name": "podvm_payload",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-podvm-payload-rhel9@sha256:025ec1bfb9aad85236e07d12b85818dee0b6c7b22d02298fdd38cd90a0895840"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-rhel9-operator@sha256:21d4a5e1064bdb48dedce5df41e012eb969a8d3aff336dbfdb76c6c33b9cc379"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:063f7f9ee19b67e2184b2b461c86e15608951864bb84c7398b2e441f9ec6164f"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "sandboxed-containers-operator.v1.6.0",
    "package": "sandboxed-containers-operator",
    "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:73c56ddfb2e16e4db400584b24b227b25655e2215fd2538292cbea2adc19c5fe",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPod",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPodConfig",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kataconfiguration.openshift.io",
                "kind": "KataConfig",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "sandboxed-containers-operator",
                "version": "1.6.0"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kY29uZmlncy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZENvbmZpZyIsImxpc3RLaW5kIjoiUGVlclBvZENvbmZpZ0xpc3QiLCJwbHVyYWwiOiJwZWVycG9kY29uZmlncyIsInNpbmd1bGFyIjoicGVlcnBvZGNvbmZpZyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RDb25maWcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2Rjb25maWdzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZENvbmZpZ1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kQ29uZmlnIiwicHJvcGVydGllcyI6eyJjbG91ZFNlY3JldE5hbWUiOnsiZGVmYXVsdCI6InBlZXItcG9kcy1zZWNyZXQiLCJkZXNjcmlwdGlvbiI6IkNsb3VkU2VjcmV0TmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgc2VjcmV0IHRoYXQgaG9sZHMgdGhlIGNyZWRlbnRpYWxzIGZvciB0aGUgY2xvdWQgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImNvbmZpZ01hcE5hbWUiOnsiZGVmYXVsdCI6InBlZXItcG9kcy1jbSIsImRlc2NyaXB0aW9uIjoiQ29uZmlnTWFwTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgY29uZmlnbWFwIHRoYXQgaG9sZHMgY2xvdWQgcHJvdmlkZXIgc3BlY2lmaWMgZW52aXJvbm1lbnQgVmFyaWFibGVzIiwidHlwZSI6InN0cmluZyJ9LCJpbnN0YW5jZVR5cGUiOnsiZGVzY3JpcHRpb24iOiJJbnN0YW5jZVR5cGUgZGVzY3JpYmVzIHRoZSBuYW1lIG9mIHRoZSBpbnN0YW5jZSB0eXBlIG9mIHRoZSBjaG9zZW4gY2xvdWQgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImxpbWl0Ijp7ImRlc2NyaXB0aW9uIjoiTGltaXQgaXMgdGhlIG1heCBudW1iZXIgb2YgcGVlciBwb2RzLiBUaGlzIGlzIGV4cG9zZWQgYXMgZXh0ZW5kZWQgcmVzb3VyY2Ugb24gbm9kZXMiLCJ0eXBlIjoic3RyaW5nIn0sIm5vZGVTZWxlY3RvciI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiTm9kZVNlbGVjdG9yIHNlbGVjdHMgdGhlIG5vZGVzIG9uIHdoaWNoIHRvIHJ1biB0aGUgY2xvdWQtYXBpLWFkYXB0b3IgcG9kcyIsInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImNsb3VkU2VjcmV0TmFtZSIsImNvbmZpZ01hcE5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJQZWVyUG9kQ29uZmlnU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFBlZXJQb2RDb25maWciLCJwcm9wZXJ0aWVzIjp7InNldHVwQ29tcGxldGVkIjp7ImRlc2NyaXB0aW9uIjoiU2V0dXBDb21wbGV0ZWQgaXMgc2V0IHRvIHRydWUgd2hlbiBhbGwgY29tcG9uZW50cyBoYXZlIGJlZW4gZGVwbG95ZWQvY3JlYXRlZCIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kcy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZCIsImxpc3RLaW5kIjoiUGVlclBvZExpc3QiLCJwbHVyYWwiOiJwZWVycG9kcyIsInNpbmd1bGFyIjoicGVlcnBvZCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2QgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2RzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kIiwicHJvcGVydGllcyI6eyJjbG91ZFByb3ZpZGVyIjp7InR5cGUiOiJzdHJpbmcifSwiaW5zdGFuY2VJRCI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUGVlclBvZCIsInByb3BlcnRpZXMiOnsiY2xlYW5kIjp7InR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlByb21ldGhldXNSdWxlIiwibWV0YWRhdGEiOnsibmFtZSI6InByb21ldGhldXMtc2FuZGJveGVkLWNvbnRhaW5lcnMtcnVsZXMifSwic3BlYyI6eyJncm91cHMiOlt7Im5hbWUiOiJrYXRhX21vbml0b3JfcnVsZXMiLCJydWxlcyI6W3siZXhwciI6InN1bShrYXRhX21vbml0b3JfcnVubmluZ19zaGltX2NvdW50KSIsInJlY29yZCI6ImNsdXN0ZXI6a2F0YV9tb25pdG9yX3J1bm5pbmdfc2hpbV9jb3VudDpzdW0ifV19XX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sInNwZWMiOnsiZW5kcG9pbnRzIjpbeyJwb3J0IjoibWV0cmljcyJ9XSwibmFtZXNwYWNlU2VsZWN0b3IiOnsibWF0Y2hOYW1lcyI6WyJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtb3BlcmF0b3IiXX0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibWV0cmljcy1yZWFkZXIifSwicnVsZXMiOlt7Im5vblJlc291cmNlVVJMcyI6WyIvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtb25pdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInNlcnZpY2VzIiwiZW5kcG9pbnRzIiwicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibW9uaXRvci1yb2xlYmluZGluZyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im1vbml0b3Itcm9sZSJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogMjkwZjQ5NDcua2F0YWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc3ZjIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjg0NDMsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6Imh0dHBzIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sIm5hbWUiOiJtZXRyaWNzIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJtZXRyaWNzIiwicG9ydCI6ODA5MCwicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjowfV0sInNlbGVjdG9yIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoid2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im1vbml0b3IifX0="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "caa",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-rhel9@sha256:94c9f6fb8f67574d02efb5c6b2ead4b192731b58128868669a771535f478980c"
        },
        {
            "name": "peerpods_webhook",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-webhook-rhel9@sha256:ce80a169800590c48049c2df3448f46692b60d81c49d9d343feb3174cc323f58"
        },
        {
            "name": "kata_monitor",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-monitor-rhel9@sha256:1a1243abf4c5bd9e904354f565071a5764d72605f26b28b77c6f88c194fbc614"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:73c56ddfb2e16e4db400584b24b227b25655e2215fd2538292cbea2adc19c5fe"
        },
        {
            "name": "podvm_builder",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-podvm-builder-rhel9@sha256:de4b9c55c2be77fc13ebcbf676e21dc94b1f84fc5c5b08b43a4e1ffd01c2afc4"
        },
        {
            "name": "podvm_payload",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-podvm-payload-rhel9@sha256:69ba1a61a3ec416986e441be099d889cf555edfc0681904dbfe568c4d58b0011"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-rhel9-operator@sha256:a994a76bada125766e05cdc317af3b64c835b6d359e1684e912cc5644f5428cb"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:0c2e9805d2c48d3cea7a9e348f0c37de435302e2e244415541c8a6fd75d77132"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "sandboxed-containers-operator.v1.7.0",
    "package": "sandboxed-containers-operator",
    "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:db15fe5c4123283ae5a214cb96f6d08a157b8215952febe6bd1590321af41961",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPod",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPodConfig",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kataconfiguration.openshift.io",
                "kind": "KataConfig",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "sandboxed-containers-operator",
                "version": "1.7.0"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJrYXRhY29uZmlncy5rYXRhY29uZmlndXJhdGlvbi5vcGVuc2hpZnQuaW8ifSwic3BlYyI6eyJncm91cCI6ImthdGFjb25maWd1cmF0aW9uLm9wZW5zaGlmdC5pbyIsIm5hbWVzIjp7ImtpbmQiOiJLYXRhQ29uZmlnIiwibGlzdEtpbmQiOiJLYXRhQ29uZmlnTGlzdCIsInBsdXJhbCI6ImthdGFjb25maWdzIiwic2luZ3VsYXIiOiJrYXRhY29uZmlnIn0sInNjb3BlIjoiQ2x1c3RlciIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIG9mIEthdGEgcnVudGltZSBpbnN0YWxsYXRpb24iLCJqc29uUGF0aCI6Ii5zdGF0dXMuY29uZGl0aW9uc1s/KEAudHlwZT09J0luUHJvZ3Jlc3MnKV0uc3RhdHVzIiwibmFtZSI6IkluUHJvZ3Jlc3MiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBub2RlcyB3aXRoIEthdGEgcnVudGltZSBpbnN0YWxsZWQiLCJqc29uUGF0aCI6Ii5zdGF0dXMua2F0YU5vZGVzLnJlYWR5Tm9kZUNvdW50IiwibmFtZSI6IkNvbXBsZXRlZCIsInR5cGUiOiJpbnRlZ2VyIn0seyJkZXNjcmlwdGlvbiI6IlRvdGFsIG51bWJlciBvZiBub2RlcyIsImpzb25QYXRoIjoiLnN0YXR1cy5rYXRhTm9kZXMubm9kZUNvdW50IiwibmFtZSI6IlRvdGFsIiwidHlwZSI6ImludGVnZXIifSx7ImRlc2NyaXB0aW9uIjoiQWdlIG9mIHRoZSBLYXRhQ29uZmlnIEN1c3RvbSBSZXNvdXJjZSIsImpzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiS2F0YUNvbmZpZyBpcyB0aGUgU2NoZW1hIGZvciB0aGUga2F0YWNvbmZpZ3MgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJLYXRhQ29uZmlnU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIEthdGFDb25maWciLCJudWxsYWJsZSI6dHJ1ZSwicHJvcGVydGllcyI6eyJjaGVja05vZGVFbGlnaWJpbGl0eSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJDaGVja05vZGVFbGlnaWJpbGl0eSBpcyB1c2VkIHRvIGRldGVjdCB0aGUgbm9kZShzKSBlbGlnaWJpbGl0eSB0byBydW4gS2F0YSBjb250YWluZXJzLiBUaGlzIGlzIGN1cnJlbnRseSBkb25lIHRocm91Z2ggdGhlIHVzZSBvZiB0aGUgTm9kZSBGZWF0dXJlIERpc2NvdmVyeSBPcGVyYXRvciAoTkZEKS4gRm9yIG1vcmUgaW5mb3JtYXRpb24gb24gaG93IHRoZSBjaGVjayB3b3JrcywgcGxlYXNlIHJlZmVyIHRvIHRoZSBzYW5kYm94ZWQgY29udGFpbmVycyBkb2N1bWVudGF0aW9uIC0gaHR0cHM6Ly9kb2NzLnJlZGhhdC5jb20vZW4vZG9jdW1lbnRhdGlvbi9vcGVuc2hpZnRfc2FuZGJveGVkX2NvbnRhaW5lcnMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJlbmFibGVQZWVyUG9kcyI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJFbmFibGVQZWVyUG9kcyBpcyB1c2VkIHRvIHRyYW5zcGFyZW50bHkgY3JlYXRlIHBvZHMgb24gYSByZW1vdGUgc3lzdGVtLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBob3cgdGhpcyB3b3JrcywgcGxlYXNlIHJlZmVyIHRvIHRoZSBzYW5kYm94ZWQgY29udGFpbmVycyBkb2N1bWVudGF0aW9uIC0gaHR0cHM6Ly9kb2NzLnJlZGhhdC5jb20vZW4vZG9jdW1lbnRhdGlvbi9vcGVuc2hpZnRfc2FuZGJveGVkX2NvbnRhaW5lcnMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJrYXRhQ29uZmlnUG9vbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiS2F0YUNvbmZpZ1Bvb2xTZWxlY3RvciBpcyB1c2VkIHRvIGZpbHRlciB0aGUgd29ya2VyIG5vZGVzIGlmIG5vdCBzcGVjaWZpZWQsIGFsbCB3b3JrZXIgbm9kZXMgYXJlIHNlbGVjdGVkIiwibnVsbGFibGUiOnRydWUsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHMgbWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlIG9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6ImluZm8iLCJkZXNjcmlwdGlvbiI6IlNldHMgbG9nIGxldmVsIG9uIGthdGEtZXF1aXBwZWQgbm9kZXMuICBWYWxpZCB2YWx1ZXMgYXJlIHRoZSBzYW1lIGFzIGZvciBgY3JpbyAtLWxvZy1sZXZlbGAuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiY2hlY2tOb2RlRWxpZ2liaWxpdHkiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJLYXRhQ29uZmlnU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEthdGFDb25maWciLCJwcm9wZXJ0aWVzIjp7ImNvbmRpdGlvbnMiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJtZXNzYWdlIjp7InR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7InR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJtZXNzYWdlIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJrYXRhTm9kZXMiOnsicHJvcGVydGllcyI6eyJmYWlsZWRUb0luc3RhbGwiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiZmFpbGVkVG9Vbmluc3RhbGwiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiaW5zdGFsbGVkIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImluc3RhbGxpbmciOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibm9kZUNvdW50Ijp7ImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGNsdXN0ZXIgbm9kZXMgdGhhdCBoYXZlIGthdGEgaW5zdGFsbGVkIG9uIHRoZW0gaW5jbHVkaW5nIHRob3NlIHF1ZXVlZCBmb3IgaW5zdGFsbGF0aW9uIGFuZCBjdXJyZW50bHkgaW5zdGFsbGluZywgdGhvdWdoIGV4Y2x1ZGluZyBub2RlcyB0aGF0IGhhdmUgYSBrYXRhIGluc3RhbGxhdGlvbiBidXQgYXJlIHF1ZXVlZCBmb3IgdW5pbnN0YWxsYXRpb24gb3IgY3VycmVudGx5IHVuaW5zdGFsbGluZy4iLCJ0eXBlIjoiaW50ZWdlciJ9LCJyZWFkeU5vZGVDb3VudCI6eyJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBjbHVzdGVyIG5vZGVzIHRoYXQgaGF2ZSBrYXRhIGluc3RhbGxlZCBvbiB0aGVtIGFuZCBhcmUgY3VycmVudGx5IHJlYWR5IHRvIHJ1biBrYXRhIHdvcmtsb2Fkcy4iLCJ0eXBlIjoiaW50ZWdlciJ9LCJ1bmluc3RhbGxpbmciOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwid2FpdGluZ1RvSW5zdGFsbCI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ3YWl0aW5nVG9Vbmluc3RhbGwiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifSwicnVudGltZUNsYXNzZXMiOnsiZGVzY3JpcHRpb24iOiJSdW50aW1lQ2xhc3NlcyBpcyB0aGUgbmFtZXMgb2YgdGhlIFJ1bnRpbWVDbGFzc2VzIGNyZWF0ZWQgYnkgdGhpcyBjb250cm9sbGVyIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwid2FpdGluZ0Zvck1jb1RvU3RhcnQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiVXNlZCBpbnRlcm5hbGx5IHRvIHBlcnNpc3Qgc3RhdGUgYmV0d2VlbiByZWNvbmNpbGlhdGlvbnMiLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kY29uZmlncy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZENvbmZpZyIsImxpc3RLaW5kIjoiUGVlclBvZENvbmZpZ0xpc3QiLCJwbHVyYWwiOiJwZWVycG9kY29uZmlncyIsInNpbmd1bGFyIjoicGVlcnBvZGNvbmZpZyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RDb25maWcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2Rjb25maWdzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZENvbmZpZ1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kQ29uZmlnIiwicHJvcGVydGllcyI6eyJjbG91ZFNlY3JldE5hbWUiOnsiZGVmYXVsdCI6InBlZXItcG9kcy1zZWNyZXQiLCJkZXNjcmlwdGlvbiI6IkNsb3VkU2VjcmV0TmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgc2VjcmV0IHRoYXQgaG9sZHMgdGhlIGNyZWRlbnRpYWxzIGZvciB0aGUgY2xvdWQgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImNvbmZpZ01hcE5hbWUiOnsiZGVmYXVsdCI6InBlZXItcG9kcy1jbSIsImRlc2NyaXB0aW9uIjoiQ29uZmlnTWFwTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgY29uZmlnbWFwIHRoYXQgaG9sZHMgY2xvdWQgcHJvdmlkZXIgc3BlY2lmaWMgZW52aXJvbm1lbnQgVmFyaWFibGVzIiwidHlwZSI6InN0cmluZyJ9LCJpbnN0YW5jZVR5cGUiOnsiZGVzY3JpcHRpb24iOiJJbnN0YW5jZVR5cGUgZGVzY3JpYmVzIHRoZSBuYW1lIG9mIHRoZSBpbnN0YW5jZSB0eXBlIG9mIHRoZSBjaG9zZW4gY2xvdWQgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImxpbWl0Ijp7ImRlc2NyaXB0aW9uIjoiTGltaXQgaXMgdGhlIG1heCBudW1iZXIgb2YgcGVlciBwb2RzLiBUaGlzIGlzIGV4cG9zZWQgYXMgZXh0ZW5kZWQgcmVzb3VyY2Ugb24gbm9kZXMiLCJ0eXBlIjoic3RyaW5nIn0sIm5vZGVTZWxlY3RvciI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiTm9kZVNlbGVjdG9yIHNlbGVjdHMgdGhlIG5vZGVzIG9uIHdoaWNoIHRvIHJ1biB0aGUgY2xvdWQtYXBpLWFkYXB0b3IgcG9kcyIsInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImNsb3VkU2VjcmV0TmFtZSIsImNvbmZpZ01hcE5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJQZWVyUG9kQ29uZmlnU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFBlZXJQb2RDb25maWciLCJwcm9wZXJ0aWVzIjp7InNldHVwQ29tcGxldGVkIjp7ImRlc2NyaXB0aW9uIjoiU2V0dXBDb21wbGV0ZWQgaXMgc2V0IHRvIHRydWUgd2hlbiBhbGwgY29tcG9uZW50cyBoYXZlIGJlZW4gZGVwbG95ZWQvY3JlYXRlZCIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kcy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZCIsImxpc3RLaW5kIjoiUGVlclBvZExpc3QiLCJwbHVyYWwiOiJwZWVycG9kcyIsInNpbmd1bGFyIjoicGVlcnBvZCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2QgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2RzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kIiwicHJvcGVydGllcyI6eyJjbG91ZFByb3ZpZGVyIjp7InR5cGUiOiJzdHJpbmcifSwiaW5zdGFuY2VJRCI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUGVlclBvZCIsInByb3BlcnRpZXMiOnsiY2xlYW5kIjp7InR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlByb21ldGhldXNSdWxlIiwibWV0YWRhdGEiOnsibmFtZSI6InByb21ldGhldXMtc2FuZGJveGVkLWNvbnRhaW5lcnMtcnVsZXMifSwic3BlYyI6eyJncm91cHMiOlt7Im5hbWUiOiJrYXRhX21vbml0b3JfcnVsZXMiLCJydWxlcyI6W3siZXhwciI6InN1bShrYXRhX21vbml0b3JfcnVubmluZ19zaGltX2NvdW50KSIsInJlY29yZCI6ImNsdXN0ZXI6a2F0YV9tb25pdG9yX3J1bm5pbmdfc2hpbV9jb3VudDpzdW0ifV19XX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sInNwZWMiOnsiZW5kcG9pbnRzIjpbeyJwb3J0IjoibWV0cmljcyJ9XSwibmFtZXNwYWNlU2VsZWN0b3IiOnsibWF0Y2hOYW1lcyI6WyJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtb3BlcmF0b3IiXX0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibWV0cmljcy1yZWFkZXIifSwicnVsZXMiOlt7Im5vblJlc291cmNlVVJMcyI6WyIvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtb25pdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInNlcnZpY2VzIiwiZW5kcG9pbnRzIiwicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibW9uaXRvci1yb2xlYmluZGluZyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im1vbml0b3Itcm9sZSJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogMjkwZjQ5NDcua2F0YWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc3ZjIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjg0NDMsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6Imh0dHBzIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sIm5hbWUiOiJtZXRyaWNzIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJtZXRyaWNzIiwicG9ydCI6ODA5MCwicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjowfV0sInNlbGVjdG9yIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoid2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im1vbml0b3IifX0="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "caa",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-rhel9@sha256:b92928ae2bd615c2e2b81f75a27cb2c65e232e6c726ecdaf792dba10cce17e3c"
        },
        {
            "name": "peerpods_webhook",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-webhook-rhel9@sha256:f1da678da50cf652c85b3cc95395aa59bbe80b0bc2dcb044806a3c8dc26e09ec"
        },
        {
            "name": "kata_monitor",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-monitor-rhel9@sha256:f287a1d6818d9e0aadc8ff21a003fa0dfbdee8bbd01e3acb322afe55d5e7e9bf"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:db15fe5c4123283ae5a214cb96f6d08a157b8215952febe6bd1590321af41961"
        },
        {
            "name": "podvm_builder",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-podvm-builder-rhel9@sha256:2b64f6557cb23e4c323af60540bbafeedf6905f6d04620d47d94b3428d148a71"
        },
        {
            "name": "podvm_payload",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-podvm-payload-rhel9@sha256:a4e71da0ab07e6c4a197f4a3ab7bc0025f595fb22ef1130c1c03c31b13fd8091"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-rhel9-operator@sha256:193bd9bf6c3110eebf0f51b4543c4311bc23213151eda0996f22a779518d17b5"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f6c37678f1eb3279e603f63d2a821b72394c52d25c2ed5058dc29d4caa15d504"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "sandboxed-containers-operator.v1.8.1",
    "package": "sandboxed-containers-operator",
    "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:ccdf9c3017206956153283b49ead9c0d30716673b5ec846467679d7af1f56d27",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPod",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPodConfig",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kataconfiguration.openshift.io",
                "kind": "KataConfig",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "sandboxed-containers-operator",
                "version": "1.8.1"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kY29uZmlncy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZENvbmZpZyIsImxpc3RLaW5kIjoiUGVlclBvZENvbmZpZ0xpc3QiLCJwbHVyYWwiOiJwZWVycG9kY29uZmlncyIsInNpbmd1bGFyIjoicGVlcnBvZGNvbmZpZyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RDb25maWcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2Rjb25maWdzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZENvbmZpZ1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kQ29uZmlnIiwicHJvcGVydGllcyI6eyJjbG91ZFNlY3JldE5hbWUiOnsiZGVmYXVsdCI6InBlZXItcG9kcy1zZWNyZXQiLCJkZXNjcmlwdGlvbiI6IkNsb3VkU2VjcmV0TmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgc2VjcmV0IHRoYXQgaG9sZHMgdGhlIGNyZWRlbnRpYWxzIGZvciB0aGUgY2xvdWQgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImNvbmZpZ01hcE5hbWUiOnsiZGVmYXVsdCI6InBlZXItcG9kcy1jbSIsImRlc2NyaXB0aW9uIjoiQ29uZmlnTWFwTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgY29uZmlnbWFwIHRoYXQgaG9sZHMgY2xvdWQgcHJvdmlkZXIgc3BlY2lmaWMgZW52aXJvbm1lbnQgVmFyaWFibGVzIiwidHlwZSI6InN0cmluZyJ9LCJpbnN0YW5jZVR5cGUiOnsiZGVzY3JpcHRpb24iOiJJbnN0YW5jZVR5cGUgZGVzY3JpYmVzIHRoZSBuYW1lIG9mIHRoZSBpbnN0YW5jZSB0eXBlIG9mIHRoZSBjaG9zZW4gY2xvdWQgcHJvdmlkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImxpbWl0Ijp7ImRlc2NyaXB0aW9uIjoiTGltaXQgaXMgdGhlIG1heCBudW1iZXIgb2YgcGVlciBwb2RzLiBUaGlzIGlzIGV4cG9zZWQgYXMgZXh0ZW5kZWQgcmVzb3VyY2Ugb24gbm9kZXMiLCJ0eXBlIjoic3RyaW5nIn0sIm5vZGVTZWxlY3RvciI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiTm9kZVNlbGVjdG9yIHNlbGVjdHMgdGhlIG5vZGVzIG9uIHdoaWNoIHRvIHJ1biB0aGUgY2xvdWQtYXBpLWFkYXB0b3IgcG9kcyIsInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImNsb3VkU2VjcmV0TmFtZSIsImNvbmZpZ01hcE5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJQZWVyUG9kQ29uZmlnU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFBlZXJQb2RDb25maWciLCJwcm9wZXJ0aWVzIjp7InNldHVwQ29tcGxldGVkIjp7ImRlc2NyaXB0aW9uIjoiU2V0dXBDb21wbGV0ZWQgaXMgc2V0IHRvIHRydWUgd2hlbiBhbGwgY29tcG9uZW50cyBoYXZlIGJlZW4gZGVwbG95ZWQvY3JlYXRlZCIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kcy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZCIsImxpc3RLaW5kIjoiUGVlclBvZExpc3QiLCJwbHVyYWwiOiJwZWVycG9kcyIsInNpbmd1bGFyIjoicGVlcnBvZCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2QgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2RzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kIiwicHJvcGVydGllcyI6eyJjbG91ZFByb3ZpZGVyIjp7InR5cGUiOiJzdHJpbmcifSwiaW5zdGFuY2VJRCI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUGVlclBvZCIsInByb3BlcnRpZXMiOnsiY2xlYW5kIjp7InR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwia2F0YWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvL3YxXCIsXG4gICAgXCJraW5kXCI6IFwiS2F0YUNvbmZpZ1wiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiZXhhbXBsZS1rYXRhY29uZmlnXCJcbiAgICB9XG4gIH1cbl0iLCJjYXBhYmlsaXRpZXMiOiJTZWFtbGVzcyBVcGdyYWRlcyIsImNyZWF0ZWRBdCI6IjIwMjQtMTEtMTlUMTM6NTU6MTdaIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9kaXNjb25uZWN0ZWQiOiJ0cnVlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9maXBzLWNvbXBsaWFudCI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9wcm94eS1hd2FyZSI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby90bHMtcHJvZmlsZXMiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdG9rZW4tYXV0aC1hd3MiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdG9rZW4tYXV0aC1henVyZSI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby90b2tlbi1hdXRoLWdjcCI6ImZhbHNlIiwib2xtLnNraXBSYW5nZSI6Ilx1MDAzZT0xLjEuMCBcdTAwM2MxLjguMSIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL3N1Z2dlc3RlZC1uYW1lc3BhY2UiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtb3BlcmF0b3IiLCJvcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3ZhbGlkLXN1YnNjcmlwdGlvbiI6IltcIk9wZW5TaGlmdCBDb250YWluZXIgUGxhdGZvcm1cIiwgXCJPcGVuU2hpZnQgUGxhdGZvcm0gUGx1c1wiXSIsIm9wZXJhdG9ycy5vcGVyYXRvcmZyYW1ld29yay5pby9idWlsZGVyIjoib3BlcmF0b3Itc2RrLXYxLjM2LjEiLCJvcGVyYXRvcnMub3BlcmF0b3JmcmFtZXdvcmsuaW8vaW50ZXJuYWwtb2JqZWN0cyI6IltcInBlZXJwb2RzLmNvbmZpZGVudGlhbGNvbnRhaW5lcnMub3JnXCIsXCJwZWVycG9kY29uZmlncy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZ1wiXSIsIm9wZXJhdG9ycy5vcGVyYXRvcmZyYW1ld29yay5pby9wcm9qZWN0X2xheW91dCI6ImdvLmt1YmVidWlsZGVyLmlvL3Y0IiwicmVwb3NpdG9yeSI6Imh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuc2hpZnQvc2FuZGJveGVkLWNvbnRhaW5lcnMtb3BlcmF0b3IifSwibGFiZWxzIjp7Im9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2guYW1kNjQiOiJzdXBwb3J0ZWQiLCJvcGVyYXRvcmZyYW1ld29yay5pby9hcmNoLnMzOTB4Ijoic3VwcG9ydGVkIiwib3BlcmF0b3JmcmFtZXdvcmsuaW8vb3MubGludXgiOiJzdXBwb3J0ZWQifSwibmFtZSI6InNhbmRib3hlZC1jb250YWluZXJzLW9wZXJhdG9yLnYxLjguMSJ9LCJzcGVjIjp7ImFwaXNlcnZpY2VkZWZpbml0aW9ucyI6e30sImN1c3RvbXJlc291cmNlZGVmaW5pdGlvbnMiOnsib3duZWQiOlt7ImRlc2NyaXB0aW9uIjoiVGhlIGthdGFjb25maWcgQ1IgcmVwcmVzZW50IGEgaW5zdGFsbGF0aW9uIG9mIEthdGEgaW4gYSBjbHVzdGVyIGFuZCBpdHMgY3VycmVudCBzdGF0ZS4iLCJraW5kIjoiS2F0YUNvbmZpZyIsIm5hbWUiOiJrYXRhY29uZmlncy5rYXRhY29uZmlndXJhdGlvbi5vcGVuc2hpZnQuaW8iLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJQZWVyUG9kQ29uZmlnIiwibmFtZSI6InBlZXJwb2Rjb25maWdzLmNvbmZpZGVudGlhbGNvbnRhaW5lcnMub3JnIiwidmVyc2lvbiI6InYxYWxwaGExIn0seyJraW5kIjoiUGVlclBvZCIsIm5hbWUiOiJwZWVycG9kcy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyIsInZlcnNpb24iOiJ2MWFscGhhMSJ9XX0sImRlc2NyaXB0aW9uIjoiT3BlblNoaWZ0IHNhbmRib3hlZCBjb250YWluZXJzLCBiYXNlZCBvbiB0aGUgS2F0YSBDb250YWluZXJzIG9wZW4gc291cmNlXG5wcm9qZWN0LCBwcm92aWRlcyBhbiBPcGVuIENvbnRhaW5lciBJbml0aWF0aXZlIChPQ0kpIGNvbXBsaWFudCBjb250YWluZXJcbnJ1bnRpbWUgdXNpbmcgbGlnaHR3ZWlnaHQgdmlydHVhbCBtYWNoaW5lcywgcnVubmluZyB5b3VyIHdvcmtsb2FkcyBpbiB0aGVpciBvd25cbmlzb2xhdGVkIGtlcm5lbCBhbmQgdGhlcmVmb3JlIGNvbnRyaWJ1dGluZyBhbiBhZGRpdGlvbmFsIGxheWVyIG9mIGlzb2xhdGlvblxuYmFjayB0byBPcGVuU2hpZnQncyBEZWZlbnNlLWluLURlcHRoIHN0cmF0ZWd5LiBDbGljayBbdGhpcyBsaW5rXShodHRwczovL2NhdGFsb2cucmVkaGF0LmNvbS9zb2Z0d2FyZS9vcGVyYXRvcnMvZGV0YWlsLzVlZTBkNDk5ZmRiZTdjZGRjMmM5MWNmNSkgZm9yXG5tb3JlIGluZm9ybWF0aW9uLlxuXG4jIFJlcXVpcmVtZW50c1xuWW91ciBjbHVzdGVyIG11c3QgYmUgaW5zdGFsbGVkIG9uIGJhcmUgbWV0YWwgaW5mcmFzdHJ1Y3R1cmUgd2l0aCBSZWQgSGF0IEVudGVycHJpc2UgTGludXggQ29yZU9TIHdvcmtlcnMuXG5cbiMgRmVhdHVyZXMgXHUwMDI2IGJlbmVmaXRzXG4tICoqSXNvbGF0ZWQgRGV2ZWxvcGVyIEVudmlyb25tZW50cyBcdTAwMjYgUHJpdmlsZWdlcyBTY29waW5nKipcbiAgQXMgYSBkZXZlbG9wZXIgd29ya2luZyBvbiBkZWJ1Z2dpbmcgYW4gYXBwbGljYXRpb24gdXNpbmcgc3RhdGUtb2YtdGhlLWFydFxuICB0b29saW5nIHlvdSBtaWdodCBuZWVkIGVsZXZhdGVkIHByaXZpbGVnZXMgc3VjaCBhcyBgQ0FQX0FETUlOYCBvciBgQ0FQX0JQRmAuIFdpdGhcbiAgT3BlblNoaWZ0IHNhbmRib3hlZCBjb250YWluZXJzLCBhbnkgaW1wYWN0IHdpbGwgYmUgbGltaXRlZCB0byBhIHNlcGFyYXRlXG4gIGRlZGljYXRlZCBrZXJuZWwuXG5cbi0gKipMZWdhY3kgQ29udGFpbmVyaXplZCBXb3JrbG9hZCBJc29sYXRpb24qKlxuICBZb3UgYXJlIG1pZC13YXkgaW4gY29udmVydGluZyBhIGNvbnRhaW5lcml6ZWQgbW9ub2xpdGggaW50byBjbG91ZC1uYXRpdmVcbiAgbWljcm9zZXJ2aWNlcy4gSG93ZXZlciwgdGhlIG1vbm9saXRoIHN0aWxsIHJ1bnMgb24geW91ciBjbHVzdGVyIHVucGF0Y2hlZCBhbmRcbiAgdW5tYWludGFpbmVkLiBPcGVuU2hpZnQgc2FuZGJveGVkIGNvbnRhaW5lcnMgaGVscHMgaXNvbGF0ZSBpdCBpbiBpdHMgb3duIGtlcm5lbFxuICB0byByZWR1Y2Ugcmlzay5cblxuLSAqKlNhZmUgTXVsdGktdGVuYW5jeSBcdTAwMjYgUmVzb3VyY2UgU2hhcmluZyAoQ0kvQ0QgSm9icywgQ05GcywgLi4pKipcbiAgSWYgeW91IGFyZSBwcm92aWRpbmcgYSBzZXJ2aWNlIHRvIG11bHRpcGxlIHRlbmFudHMsIGl0IGNvdWxkIG1lYW4gdGhhdCB0aGVcbiAgc2VydmljZSB3b3JrbG9hZHMgYXJlIHNoYXJpbmcgdGhlIHNhbWUgcmVzb3VyY2VzIChlLmcuLCB3b3JrZXIgbm9kZSkuIEJ5XG4gIGRlcGxveWluZyBpbiBhIGRlZGljYXRlZCBrZXJuZWwsIHRoZSBpbXBhY3Qgb2YgdGhlc2Ugd29ya2xvYWRzIGhhdmUgb24gb25lXG4gIGFub3RoZXIgaXMgZ3JlYXRseSByZWR1Y2VkLlxuXG4tICoqQWRkaXRpb25hbCBJc29sYXRpb24gd2l0aCBOYXRpdmUgS3ViZXJuZXRlcyBVc2VyIEV4cGVyaWVuY2UqKlxuICBPcGVuU2hpZnQgc2FuZGJveGVkIGNvbnRhaW5lcnMgaXMgdXNlZCBhcyBhIGNvbXBsaWFudCBPQ0kgcnVudGltZS5cbiAgVGhlcmVmb3JlLCBtYW55IG9wZXJhdGlvbmFsIHBhdHRlcm5zIHVzZWQgd2l0aCBub3JtYWwgY29udGFpbmVycyBhcmUgc3RpbGxcbiAgcHJlc2VydmVkIGluY2x1ZGluZyBidXQgbm90IGxpbWl0ZWQgdG8gaW1hZ2Ugc2Nhbm5pbmcsIEdpdE9wcywgSW1hZ2VzdHJlYW1zLFxuICBhbmQgc28gb24uXG5cbiMgSG93IHRvIGluc3RhbGxcbiAgUmVhZCB0aGUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIE9wZXJhdG9yIGFuZCBjbGljayBJbnN0YWxsLlxuXG4gIE9uIHRoZSBJbnN0YWxsIE9wZXJhdG9yIHBhZ2U6XG5cbiAgLSBTZWxlY3QgYHN0YWJsZWAgZnJvbSB0aGUgbGlzdCBvZiBhdmFpbGFibGUgVXBkYXRlIENoYW5uZWwgb3B0aW9ucy5cbiAgVGhpcyBlbnN1cmVzIHRoYXQgeW91IGluc3RhbGwgdGhlIGxhdGVzdCB2ZXJzaW9uIG9mIE9wZW5TaGlmdCBzYW5kYm94ZWQgY29udGFpbmVyc1xuICB0aGF0IGlzIGNvbXBhdGlibGUgd2l0aCB5b3VyIE9wZW5TaGlmdCBDb250YWluZXIgUGxhdGZvcm0gdmVyc2lvbi5cblxuICAtIEZvciBJbnN0YWxsZWQgTmFtZXNwYWNlLCBlbnN1cmUgdGhhdCB0aGUgT3BlcmF0b3IgcmVjb21tZW5kZWQgbmFtZXNwYWNlXG4gICAgb3B0aW9uIGlzIHNlbGVjdGVkLiBUaGlzIGluc3RhbGxzIHRoZSBPcGVyYXRvciBpbiB0aGUgbWFuZGF0b3J5XG4gICAgYG9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1vcGVyYXRvcmAgbmFtZXNwYWNlLCB3aGljaCBpcyBhdXRvbWF0aWNhbGx5XG4gICAgY3JlYXRlZCBpZiBpdCBkb2VzIG5vdCBleGlzdC4gQXR0ZW1wdGluZyB0byBpbnN0YWxsIHRoZSBPcGVuU2hpZnRcbiAgICBzYW5kYm94ZWQgY29udGFpbmVycyBPcGVyYXRvciBpbiBhIG5hbWVzcGFjZSBvdGhlciB0aGFuXG4gICAgYG9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1vcGVyYXRvcmAgY2F1c2VzIHRoZSBpbnN0YWxsYXRpb24gdG8gZmFpbC5cblxuICAtIEZvciBBcHByb3ZhbCBTdHJhdGVneSwgZW5zdXJlIHRoYXQgQXV0b21hdGljLCB3aGljaCBpcyB0aGUgZGVmYXVsdCB2YWx1ZSxcbiAgICBpcyBzZWxlY3RlZC4gT3BlblNoaWZ0IHNhbmRib3hlZCBjb250YWluZXJzIGF1dG9tYXRpY2FsbHkgdXBkYXRlcyB3aGVuIGEgbmV3XG4gICAgei1zdHJlYW0gcmVsZWFzZSBpcyBhdmFpbGFibGUuXG5cbiAgLSBDbGljayBJbnN0YWxsIHRvIG1ha2UgdGhlIE9wZXJhdG9yIGF2YWlsYWJsZSB0byB0aGUgT3BlblNoaWZ0IHNhbmRib3hlZFxuICAgIGNvbnRhaW5lcnMgbmFtZXNwYWNlLlxuXG4gIC0gVGhlIE9wZW5TaGlmdCBzYW5kYm94ZWQgY29udGFpbmVycyBPcGVyYXRvciBpcyBub3cgaW5zdGFsbGVkIG9uIHlvdXJcbiAgICBjbHVzdGVyLiBZb3UgY2FuIHRyaWdnZXIgdGhlIE9wZXJhdG9yIGJ5IGVuYWJsaW5nIHRoZSBydW50aW1lIG9uIHlvdXIgY2x1c3Rlci5cbiAgICBZb3UgY2FuIGRvIHRoaXMgYnkgY3JlYXRpbmcgYSBgS2F0YUNvbmZpZ2AgQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uKENSRCkgaW5zdGFuY2UuIEZvciB0aGlzIGNsaWNrXG4gICAgb24gXCJjcmVhdGUgaW5zdGFuY2VcIiBvbiB0aGUgb3BlcmF0b3Igb3ZlcnZpZXcgcGFnZS5cblxuIyBEb2N1bWVudGF0aW9uXG5TZWUgdGhlIFtPcGVuU2hpZnQgc2FuZGJveGVkIGNvbnRhaW5lcnMgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLnJlZGhhdC5jb20vZW4vZG9jdW1lbnRhdGlvbi9vcGVuc2hpZnRfc2FuZGJveGVkX2NvbnRhaW5lcnMvKS4iLCJkaXNwbGF5TmFtZSI6Ik9wZW5TaGlmdCBzYW5kYm94ZWQgY29udGFpbmVycyBPcGVyYXRvciIsImljb24iOlt7ImJhc2U2NGRhdGEiOiJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBWHdBQUFGOENBWUFBQURNNXdES0FBQUFDWEJJV1hNQUFHNjZBQUJ1dWdIVzNyRVhBQUFnQUVsRVFWUjRuTzNkWDJ4VlpiNy84Vld0b0tDMHhNUWZQOUJmQzBOb1NFYmJ5bVF5Y1lTV0d4MXZhSEUwNWhoTVM5UkVMb1F5WkNJbk1hRWtKb09aR0lwZU1CZWF0dEY0TXRHUlhXNGN2YUdGR1RPWkRMYmdKS1NHSSsxUk9Cd1RROHNjRUFUdEw1OWxGN01IMjdMWHM1NW4vWDIva2gzbVQzZTc5dHJ3MlUrL3ozZDlWOVhVMUpRSEFNaS9tM2lQQWFBWUNId0FLQWdDSHdBS2dzQUhnSUlnOEFHZ0lBaDhBQ2dJQWg4QUNvTEFCNENDSVBBQm9DQ3FlYVBkMkxsejU0TVhMMTc4eWJsejUxb3VYNzY4K096WnN3MFhMbHk0VlQvczQ0OC9yczNoU3daQ3VmLysreWYwOVFzWExyeTBaTW1TMGZuejU1OWJ2SGp4MElJRkMvNjJaOCtlUDNFMjdXTzBnZ1ZidDI3dFVyQi8rZVdYOTQ2UGp5OGRIUjI5TGZNdkNraFlRMFBEMTNWMWRXZHFhbXErV0xKa1NlblZWMS90NFQySmhzQVA2Y1VYWDZ6NzZxdXZuanR6NXN3dlJrZEhHd2gzSUQ3NkVHaG9hQmhkdW5UcEgrKzg4ODdmdmZUU1MrT2Mvc29SK0JYWXNXUEhFNTkvL3ZtVzQ4ZVAvNVNBQjlKREh3RDMzWGZmWCsrNTU1NzlyN3p5eXU5NWErWkc0TTlDSVgveTVNbWRSNDhlL2ZIcDA2Zlo2d0JTYnRteVpWZlhyRm56OTVVclYrNGgvR2RHNEpmUlJ1dG5uMzMyMGtjZmZmUnpRaDdJTG9YL0F3ODg4T2NWSzFhOHlBYndQeEg0bnVjOS9mVFRyNCtNalB5Uzdoa2dmOVFOMU5UVTlJYzMzbmpqbWFLL3ZZVU5mRzIrZnZycHAvMnM1b0ZpQ0ZiOXExYXQ2aWpxWm0vaEFsOWxteE1uVHJ3Mk9EalllUDc4K2FvVUhCS0FHQzFhdEdpcXRiWDEyT3JWcTU4dldybW5NSUd2b0I4ZUh1Nzc4TU1QZjVTQ3d3R1FBZzg5OU5CL05qYzNkeFlsK0hNZitFSHA1cDEzM21sSndlRUFTS0hISDM5OHFCQ2xIZ1YrWGgrYk5tMDZzR2pSb3UvME1ubnc0TUZqcm9leVFwbVI1MHpNNVFwZm93N2VlKys5MzZaMU03YW1wc1pyYW1xYThmOXJiVzJOL1hnQVZ3WUhCMmY4emlNakk5N2s1R1FxejdzMmR4OTk5TkZmNTNHVVE2NENYK1didzRjUC8rWElrU05Ma2o2V3hzWkdyNzYrM2c5MlBXcHJhNi85Q2VCN0V4TVRmdmdIZitveE5qYm1IVHQyTFBFenRIYnQyclByMXEzN1daN0tQTGtKL0tlZWV1ckF3WU1IMjVMb3ZLbXJxL05YNWtHNHMwb0hvdE52QjhHSGdQN3orSGo4dWF1T25nMGJOZ3k4K2VhYkcvUHdsbVkrOExXcWYvLzk5MGZpdm1pcXJhM05EL2IyOW5aL0pRL0FMYTM4UzZXU0gvNERBd094bm0xZHZQWElJNDgwWlgyMW4rbkEzN0pseTIvZWZ2dnRGK0pZMWF2dXJuQVBIZ0NTcGZBUEhuSHNCMmkxLytTVFQ3NjhmLy8rZjgvcVc1L0p3TmVxL3BOUFBpa2RQSGh3NXAxUGk3U1NWOEIzZG5iRytSSUJoTkRYMStjSGZ4d3IvdzBiTm96Y2UrKzk3VmxjN1djdThIVUJWYWxVK3REbG1HS3Q1cnU2dXZ5UXAxd0RaSWZLUGdyL25wNGVwNnQraldWdWIyOS9LSE1YYkdXcGgvUzU1NTc3amN1KytycTZ1cW5lM3Q0cEFObW5mOHY2TiswcUw1UkZ5cVFzWldobURsUVhSTGg2NDFwYVdxWU9IRGpBUDNFZ2gvUnZXLy9HWGVWSGxpN1d5a1JKNStHSEh6N3BZZ2FPMmluMTZ4OXRsRUQrcWJ0SFpWb1g3WjJheWZQQkJ4K3NUUHRKdkNrRnh6QXJiYzZ1V2JQbW5PMndWNDIrdDdmWHIvY1I5a0F4Nk4rNi9zM3IzNzR5d0NabGxMSkttWlhtazVuYUZiNU8zTHZ2dm52Qzl1YnNybDI3L0ExWnJuZ0Zpa3RYOW1wamQvZnUzVmJQZ1RaekgzdnNzZFZwN2VCSlplQzc2TVJwYVdueDMrRFpadGdBS0I1ZHhhc0Y0TkRRa0xYWG51b09uclJ0S3Z6cVY3OTZ3bVluVGsxTnpkVGV2WHZaaXdNd0syV0Vzc0ptQjQreWpFM2JPZXpZc2VPSjExOS8vVDlzWFRtckFXYTZHSU5lZWdBM292cStMckswTmJoTlYrWSs4OHd6Ly9iS0s2LzhQaTBuUHpXYnRpcmoyQXg3MWVyMTZ4cGhENkFTeWdwbGhyTERCbVdaTWszWmxwWTNJQlVyZkpzYnROcDkxNnFlN2hzQXB0VENxZFcramF0MTA3U1JtM2pnMnd4N2xYRDBSdEdCQXlBcWRmSm80V2lqeEpPVzBFKzhwS1BSeGpiQ3ZxT2p3LzkxakxBSFlJT3lSSm1pYklsS0dhZXNTL3FOU1RUd2RRV3RqVG4ycXJucGlsa0FzRTNaWXFPdXI2eFQ1aVg1QmlVVytMcERsWTByYUhYVlhIZDN0NTJEQW9BWktHT1VOVkVwODVSOVNaM2pSQUpmTnk1NTY2MjNJdDFGSkJpUHdKeDZBSEZRMXRnWXk2RHNVd1ltOGFiRnZtbXJGcVg5Ky9jZmp0SitxUk91elZtdW1nVVFOOVgxdFprYnBZTkhQZnBidG14WkYvZlZ1TEd1OE5XUm81RUpoRDJBckZMMktJT2lyUFNWZ2NyQ3VJZXR4UnI0dWkxaGxJNGN3aDVBR3RnSWZXV2hNakhPbHhOYjRLdG1GZlVldEF3L0E1QVd5aUpsVWhUS3hEanIrYkVFdm41dGVmdnR0MStJOGozWW9BV1FOc0ZHYmhUS3hyaEtPN0VFdmk0NGlGSzNWdzhzWVE4Z2paUk5VZnIwbFkxeFhaVGxQUERWY3hybDRpcGQ1VWFmUFlBMFUwWkZ1U0pYR1JsSGY3N1R0a3o5bXZMYWE2K2RNbDNkYXphT1dxQUFJQXRVMXplZHZhTld6ZWVmZjM2NXkzazdUbGY0aHc4Zi9vdHAyQWNkT1FDUUZWRTZkNVNWeWt5WEw5Vlo0Ry9kdXJYcnlKRWpTMHlmcnhISERFSURrQ1hLTEdXWEtXV21zdFBWUzNZVytPKzk5OTV2VForckRSRG0yUVBJSW1WWGxFM2NLTmw1STA0Q1g1c1BwMCtmcmpaNXJ1cjJiTklDeURKbG1MTE1oTExUMVFhdTljRFhSdTNCZ3dmYlRKNGIzSzBLQUxKT1dXWmF6MWVHdXVqTnR4NzRuMzc2YWIvcFJxMCtGYmtITFlBOFVKYVpWaXVVb2NwUzI2ZkJhbHVtSm1HKy9QTExSMHllMjlMU1FsY09nTnhSVFg5b2FNam9aYjN3d2d0cmJVN1V0THJDSHg0ZU5yN3RWTlNaRkFDUVJsR3lMVXFtenNSYTRHdDFiM29ISysxb014UU5RQjRwMjB5N2RwU3B5bFpicDhWYTRKODRjZUkxaytkcFU2T3J5MW5iS1FBa1RobG51b0ZybXEwenNSTDQyazBlSEJ3MDZrSFNyenRjWUFVZ3o1UnhwcVVkWmF1dGpoMHJnVy9hbVZOWFY4Y1VUQUNGb0t4VDVvVmxzMlBIU3VCLzlORkhQemQ1WGwrZjFmMElBRWcxMDh3enpkanJSUTc4cDU5KytuV1RxMnJWaHNuNEJBQkZvc3hUOW9XbGpGWFdSajFWa1FOL1pHVGtseWJQWTZNV1FCR1pacDlwMXBhTEZQaHFGeks1dVlucVdPM3Q3VkYrTkFCa2tyTFBwSmF2ckkzYW9oa3A4RC83N0xPWFRKN0hjRFFBUldhYWdhYVpHNGcwV3VIdXUrKytFclorcjE3VWlZa0o0NThKQUhtZ1ZzM0p5Y2xRcjJUWnNtVlh2L2ppaTF0TVg3N3hDbi9IamgxUG1HeldVcnNIQUxNc1ZPWXFlMDFQbjNIZ256eDVjcWZKOCtpN0J3RHpMRFROWGk5SzRCODlldlRIWVovVDF0YkcrR01BbUI2ZnJFd015eVI3QTBhQmIxck9vVE1IQVA3SkpCT2psSFdNQXYvenp6L2ZFdlk1MnF5bG5BTUEvNlJNTkJtcVpwTEJubW5nSHo5Ky9LZGhuOFBxSGdCK3lDUWJUVExZTXdsOFRXMGJIUjI5TGV6ekNId0ErQ0dUYkZRR20welFEQjM0WDMzMTFYTmhuK01SK0FBd0k5TnNOTW5pMElGLzVzeVpYNFI5anNsT05BQVVoVWxHbW1SeDZNQWZIUjF0Q1BzY3BtSUN3T3hNTXRJa2kwT1BWcWlxcWdvOWkrSFVxVlAwM3dQQUxNYkd4cnpseTVlSFBqMVRVMU9oYmp3VmFvVy9kZXZXME5jQ2F5b2NZUThBczFOR21relFESnZKb1FMLzdObXpvWGNYS09jQXdJMlpaT1c1YytkQzNVMGxWT0JQVGs3ZUhmYUFtcHFhd2o0RkFBckhKQ3UvL1BMTGU4TjhmYWpBSHg4Zlh4cjJnQWg4QUxneGs2d01tOG1oTm0xTk5teWp6TnNIZ0NLcHFncTFCeHRrYk1WUHFuaUZiM0pycmNiR3hyQlBBWURDTXNuTU1ObGNjZUJmdkhqeEoyRVBoTzRjQUtpY1NXYUd5ZWFLQXovc2JyQkgvUjRBUWpISnpERFpYSEhnWDc1OGVYRWNCdzhBUldXU21XR3l1ZUxBUDN2MmJPakxlSFdUWGdDQXU4d01rODBWQi82RkN4ZHVEWHNnclBBQm9ISW1tUmttbTQzdmFWc0pWdmdBVURuWG1WbHhIMzdZSG56ZHRtdGlZc0wwdUFwbmNIQ3c2S2NBTTJBMFNmRW85Q2NuSjBPOTdrcDc4VVBmaUx4U2xITXFVeXFWdks2dUxsMHhsNFhEUmN3MFVLdW5wNGNiQ0JXSXNuTm9hTWpKQzNaYTBzSGNkQVBqalJzM0V2YVlsZjV1Nk8rSS9xNEFVUkg0Q2RIS3ZyKy92NUN2SGVIcDc0cit6Z0JSRVBnSlVSa0hDSU8vTTRpS3dFK0FObWdwNHlBcy9aMWhjeDlSVkJUNEpvUFRhTWtFZ0hTcEtQRDM3Tm56cDdCSFRaY09BSVRuTWpzcDZRQkFpcmlzamhENEFGQVFCRDRBRkFTQkR3QUZRZUFEUUVFNG02VUR1L2J1M1V2blU4Nk1qSXg0MjdkdkwvcHBRSXdJL0l4UTJETTVFVUFVbEhRQW9DQUlmQUFvQ0FJZkFBcUN3QWVBZ2lEd0FhQWdDSHdBS0FnQ0h3QUtnc0FIZ0lJZzhBR2dJQWg4QUNnSUFoOEFDb0xBQjRDQ0lQQUJvQ0FJZkFBb0NBSWZBQXFDd0FlQWdpRHdBYUFnQ0h3QUtBZ0NId0FLZ3NBSGdJSWc4QUdnSUFoOEFDZ0lBaDhBQ29MQUI0Q0NJUEFCb0NBSWZBQW9DQUlmQUFxQ3dBZUFnaUR3QWFBZ0NId0FLQWdDSHdBS2dzQUhnSUlnOEFHZ0lBaDhBQ2dJQWg4QUNxS2FOeHBJeG0wblQzb1BodnpKZW83WDJzbzdCaU1FUHVESXR5TWozbmRqWTk3VjZUK3ZQY2JIL1IrNHl2TzhnMkYvOUxQUGV1ZWVmZGIvanpmVjFYazMxZGRmZTFRM05mbC8zdHpVeEZ1S0dSSDRnQVVLOTZ1RGczNjQ2ejkvZSt5WTg5T3FEdzcvdzJObzZBZi8zODJOalg3dzM5TGE2di9KaHdBOEFoOHdvNVg2bFZMSnU2S1FIeHowcGlZblUzVW05WUdqeHpmOS9mNS9yNnFwOGFwYlcvMFBnRnZhMi8zZkJGQThCRDVRSVFYN053cjVVdWxhV1NZcjlJRjBaV0RBZjNqYnQvdmxJQVgvL001T1Z2OEZRdUFEYzFCNTVuSmZuL2ROWDEvcVZ2RlI2QVByOHI1OS9vUHdMdzdhTW9IclRFMU1lSmQ3ZXJ6SitucnZmSE96SDRwNUN2dnJCZUd2MTZyWHJOZXVjNEQ4SWZDQmFTclpYT2pzOUNZV0wvWXVidCtldWJLTkRYck5ldTA2QnpvWE9pZklEd0lmaGFkeXpUOWFXNzEvckY5L2JaTVRubjh1ZEU1MGJuU09rSDBFUGdwTElhWVN4b1hObTcyck03UTI0bnM2TnpwSE9sY0VmN1lSK0NpYzhxQXZZdG5HbE00VndaOXRCRDRLUS9Wb2xTY0krbWlDNE5lNXBNYWZMUVErY2s4WFNXa0RVdlZvU2pmMjZGenFuUDV2ZTd0L2pwRis5T0VqMTlSaStIVjNkNnJhS29NWk9GSjkzU0MwL3psNzFydDA2ZEsxLzE1MzNSV3h3WXE2ZkNaUDBuUXgxL25CUVc5K1Y1ZDNXM2QzS280Sk15UHdrVXU2WUVxcitqaG0yc3dtbUdlamNOZElnMkRJMlZ6Q0RqelE2MVRQdkVZODZFTWdyamsrMTlNSDZxWGR1LzJya0JmMjlYRUJWMG9SK01nZHJlZ1ZQbkdyYm1tNU5xL20rcFc3SzBHd2x2ODhmUUFvK0lNNVAzR1dzZlJob3d1NGJ0MjFpOVYrQ2hINHlBMnRjRlZQam11RnE0RmtHa2t3cjczZEQ5eXEydHBVbkVvZFIzWFpoNDQrQU1ybkFNVlIzbUsxbjA1czJpSVgxQ1o0dnFuSmVkZ3I1T2QxZEhpM0h6amcxVTVNK0lHbTBFOUwyTTlFeDZaajFMSHFtSFhzZWcxNkxTN3B2ZUNpclhRaDhKRnBXcjJxVnE4MlFaY3JWNVZyRnZiMi9rdklaMVY1K09zMTZiVzVvdmRFNzQzZUkrYnpKSS9BUjJhcGhPT3ZJQjJOUXdoVzh6V25UbmwzREE1Njh6bzdjL2VYUmE5SnIwMnYwZVdxM3gvVDBOcnE3eTBnT1FRK01rbkI0YXFFbzlEVHBtUE4ySmkvRWk3Q3pVTDBHdlZhOVpyMTJsMEVmMURpNFdLdDVCRDR5QnkvWHQvY2JMMkVVeDcwNmpCSmMxM2VGYjFtdlhaWHdhLzN6QjlTUjEwL0VRUStNa1VYVXFrbWJOdjhiZHNLSGZUWEt3OStuUnZiOUI1ZTdPcEswU3N1QmdJZm1hR05QODFxdDBrYmxxcGZMK2pwSWVobm9IT2ljNk56Wkh0elZ6ZGR1WkREZlpFMEkvQ1JDUW9HbTV1ekdtK2c5a1J0V0hKRDd4dlRPZEs1MGpuVHViTkY3eW1oSHg4Q0g2bG5PK3hWb2xnME1wTHAxc3FrNkp6cDNOa3M4eEQ2OFNId2tXbzJ3MTRia0hjY09rVDVKcUtnektOemFXdTFUK2pIZzhCSGF0a00rMXZhMnZ3TnlMaG0zQlNCenFYL20xSmJtNVZYUytpN1IrQWpsV3lHL1lLOWU3M2JTeVZXOVE3b25PcmM2aHpiUU9pN1JlQWpkZFI2YVNQc1ZjSlpORHpzejJtSFd6ckhPdGMyK3ZiMTN0T3k2UWFCajFUUkJUazJXaTgxaTE3bEJpWTF4a2ZuV21Vem5mdW8xTEtwYVp1d2k4QkhhdmczTGJGd1VaVnF5clJiSmtNbEhuL3VVRWRINUovUEt0OCtBaCtwRUF4Q2k4b2ZYVXk5UGxFNjk1ckxFelgwZFF0SGhxM1pSZUFqY1JxYnF4dVhSSjJObzRCWnlJeVcxTkI3b1hrOFVSRDRkaEg0U0p4K2RZODY5Wkt3VHlmTjQ5SE1mYVFEZ1k5RWFaTTJha2NPWVo5dW1ybHZHdnJzdzloRjRDTXhxdHRIM1pnajdMTkJvUisydktNV1R5NlVzNHZBUjJLaTF1MEorMnhSZVNmTVJpN1hUOWhINENNUlgzZDNSNnJicS9XU3NNK2VTcnQzOURYNmdJQmRCRDVpcDg2TFM3dDNHLzlZWGRoRDJHZFgwTDB6MDFXNXdWM0hlSC9kcU03amkwSzZSWm1Wb2tESWM1LzlZTm45WG10cmE3Mm1uRjRwck5YN3JWMWQvdjF0cjA2M1hsWTNOZmsxZTY2aGNJZkFSNncwSnlkS0tTZXZWOUQyOVBUNGovSHg4WC81Myt2cTZyenU3bTZ2TTRjRHhSVHNtcS9QZlFuaVEwa0hzVkZYenRjUjZyS2F5SmkzMlRoYTBkZlgxM3ZidDIvL1FkaUwvcmZObXpkN3JhMnQvN0w2QjB3UStJaU53dDYwSzBlYnRIbnEyaGdiRy9QYTI5dTk5ZXZYenhqMDF4c2FHdksvVml0OVBSY3dRZUFqRnFyVm1sNWdwYnA5WGpieEppWW0vQkxOOHVYTHZZR0JnZERQNysvdjkrdjYzWFN3d0FDQmoxaEVLZVhrWlpPMnI2L1BMOS9zanRDaEpKT1RrLzczMFBjcU1VSVlJUkQ0Y0U3akU2NE9EUm45R04wc08rdFhXNnIycmxXNWF2R1RFUWZFbFZNcGFPUEdqWDU5ZjRRaFk2Z0FnUS9uVEZmM3VrRjJsaSsrVWExZE5YZlYzbzlGSEE0M0Y5WDNtNXViL1orbGtoRXdHd0lmVG1sMS8xMEZtNUl6V2REVGs4bFNUbENuMTZxKzM5SjllU3VobjZVeWo5bzdnWmtRK0hES2RIVmYzZEtTeWY1czFkUVY5S3F4Mnl6ZlZFby9VeTJlQ243YU9IRTlBaC9PUkZuZFo2MHJSelYwMWRKVlU2K2t6ZEkxSFlOS1NUb20yamdSSVBEaHpHWEQwTlpHYlZhdXBsWDVSclZ6MWRDSEREZW1YZEl4cVFWVUpTYnEreUR3NFlRL0k4VWdBTlZ6bjVXTldvV29TaWR4MXVsTkJXMmNmUXdsS3pRQ0gwNFlyKzY3dWxLL1VSdU1RMGlxVG05S3g2cldVTzB4VU44dkpnSWYxdW1tNUNaWDFmcWpjVk04UGtHMWNOWEVLeDJIWUtxdHJjMXJhV2x4OXYzVklxclhvTkVPMVBlTGhjQ0hkZC9rYkhXdjJuZFhWNWRmQzNkWnAyOXNiUFFPSFRya2QvcG9CWDdnd0FGL1dxWXJHdTBRakdtZ3ZsOE1CRDZzdTJUUUI1N1cxWDB3RG1IZnZuM09ma1pOVFkzWDI5dDdyZE1uRUt6QWQrM2E1WCtOQzhHWUJnVS85ZjM4SS9CaGxlNW1aZEtLcVo3N05LM3VYWTFEdU42MmJkdXVYWkU3RzYzQTlUVWRJZTRIRzFiNUdHYkdOT1FYZ1ErclREZHIwOUtaVXo2MjJPVTRCTlhvVDUwNjVWOFZXMXZCQjUyK1Jpdnc0ZUZocC9WOXhqVGtHNEVQcTB6cTk3cXFOdW0rKzZoaml5dWxtcnpxOUVHblQxaEJoNDFLUUM3cis4R1lCc1l3NXd1QkQydlVlMjl5ZzVQNUNkKytUeXZuWUJ5Q0s2ckI3OTI3OTFxblQxUmFnYXYwRWtkOW56SE0rVUhndzVwdkRFSkJtN1h6RWdyOFlKTlV0V3VYYlphcXZTdm91eXh2U3F2TW94VzRYb2ZyK240d2hwazJ6bXdqOEdITkZZUEFUMnBBbWxhc0NqQ1hiWmFxdGF2bXJ0OGdLcW5UbXdxdW9GV3BTSzJkcnVoYzZUY2hObld6aThDSEZicEJ1VWwzenJ3RUFqL29pbkhWZmFQYXVucm9nMDZmdUFRZE5xcnZ1eXp6Nk9ld29adE5CRDZzTUZuZHE1eVR4QXBmWlJBWFlhK1FWVTFkb2R1ZTRHam40RWJuT2hZWGRPNll1WjlOQkQ2c3VHSXdteVhKY281dHFxRXI2UFZoNHJKOFU2bWd2cS9XVHhkdG5HemlaaE9CRHl1dUdnUitFdVVjYjNxRmFvdkNWTFh6NElyY3RBbHVoS0pqdE5uRzZmSWFCYmhENENNeVhWMXIwbzZaNVp1VEIrTVFGS1kyMml4ZEN6cHMxQnJxcXI2UDlDUHdFWm5KNmw0WFcyWHhmcldpMnZpTnhpR2tsVnBEZGV3YTZZRGlJZkFSMlZXRE5yMHNydTQxdGxnMThiVFU2VTNwMkxYcDZucE1BOUtId0VkazN4b0UvaTBaQ3Z4Z0hJSTJLdE5ZcHpjVmpHbFFDeWxsbm1JZzhCSFp0d1liZUZsYTRTdmtzMUNuTjZVVzBqaXZGMEJ5Q0h4RVlySzZ2OW5oMWFBQVprZmdJNUx2REdhcjNNeHFFa2dFZ1k5SVREWnNreDZGREJRVmdZOUlURmI0V2Rxd0JmS0V3RWNrSm9IUENoOUlCb0dQU0FoOElEc0lmRVFTZGlUeVRRNXZ5d2RnYmdRK1lzWHFIa2hPTmVjK0c5SjRsNkhiVHA3MFZxWGdPQUJVaHNEUGlPM2J0NmZ1UUIvMFBPOWd5T2RrZVVJbWtIV1VkQUNnSUFoOEFDZ0lBaDhBQ29MQVI2ekdEZnIyQWRoQjRDTlczOTUrT3ljY1NBaUJEMlAvajFNSFpBcUJEMlAvWmZERWhWZXZjc0tCaEJENENkRGRrK29LT21MZy95eFprb0tqQUlxSndFK0liaUlOQUhFaThCT2krNGgyZEhRVThyVURTQWFCbjZDK3ZqN3Z3SUVEaFMzdkFJZ1hzM1FTcHBXK0hocU9OakV4a2FsajEvQTA3OWxuUXozbjZ1Q2dzK01CTURjQ1B5V2FzbmhqNzlaVzcxekl3QWVRSEVvNmlKWEpIYklBMkVIZ0k1S2JHeHREUFQzc0hiSUEyRVBnSTVLcTJ0clFULzgyaFRkekFZcUF3RWNrSnJjc25Nclk1alNRRndRK0lqRUovQ3QwNmdDSklQQVJTYlZCZHhFbEhTQVpCRDRpTVZuaEUvaEFNZ2g4UkhLendRcGZuVHJVOFlINEVmaUlyTHFsSmZTM3lOSVZ0Mk5qWTk1Z2p2Y2RTcVdTZjZVMzhvL0FSMlFtcS95ckdRcVk4ZkZ4Yi8zNjlmNElqTEVjWFRpbWtOZW83bzBiTjNxVGs1TXBPQ0s0UnVBak1wT04yeXVsVXVaTy9NREFnTGQ4K1hLdnU3czdjM09QeXVuWXU3cTZ2T2JtWm05b2FDZzlCd2JuQ0h4RVpyTEMvL2JZc2N6VzhYZnYzdTNWMTlmNzAwNnpSdmRoMExIdjI3Y3ZjOGVPNkFoOFJLYkFyNnFwQ2YxdHNyaktENmdFc25uelpyOGtrb1g2dm81UlFiOTkrM2JLTndWRzRNT0s2dGJXME44bXFRdXdhZ3crbkdhamtvanErNTJkbmFtczcrdVk5S0drWXh5M09NZW9NZVFNSmFRRGdROHI1clczaC80MlNhM3cydzJPOVViNisvdjlFZGRwcWUvckdIUXMybk53VWFkM2NRN2hIb0VQSzB4VytGT1RrNG1Fdm9MUTVpby9vRktKNnZzSy9sS0M1U3J0TGFoOG8yTnhRZWRPbTc3SUhnSWZWdWlLMjdDamt1V2JCSUl4MkhCMUVmcmVkQnVuV2gxVlNvbXp2MTExZW4zWWFHL0JWWjFlNTB3L3A5WmdTaXFTUitEREdxTTZmcW1VU0xlT1NoSUtyaGFEaThZcXBWS0tXaDlWMzNkWjVsR2RYajlEZGZwang0NDUrems2Vi9vQXkrVGQyZUFqOEdITi9NN08wTjhxcWJLT04zMWJTWVYrYjIrdjB4dkpxNzZ2M3lyVUVtbFRVS2ZYNjlEUGNFWG5SamZiRHpwOWtGMEVQcXhSZStaTkJzRjVPZUYrZHEyT3RYTGR0V3VYczUraEVvdGFJaFdZTnRvNFZaSlMwS3RPNzdKOG8zT2kzeURZcE0wSEFoOVczV0lRREZlSGhoS2ZvS21hdEZiTHAwNmQ4dHJhMnB6OW5HQk1nK3I3Sm0yY3dUZ0UxZWx0dGxsZXI2T2p3ejgrblJQa0I0RVBxMHpLT25MSmNybkRsRmJnNnJBNWRPaVEwMTV6MWZmVk1xbHVsMHJxKy9vYS9TYmllaHlDNnZURHc4UCtieEJzek9ZUGdRK3JWTll4NnRicDcvZStTOUdGUzBHSGplcjdycnA1UkNNT2JqU21RYXRzZlkzck9yMWVhOURwZzN3aThHR2Q2U28vNlZyK1RJSXJhTGR0Mitic1p3UmpHb0pONUlCKzB3ajY2VjNYNmZYaDFtbjR2aUU3Q0h4WU44ODA4SHQ2VWpsUVRhVU5kZGlvdnUreWpWTXRsY0VZNW1Cc3NjczZ2ZllxRlBUNkRZTHlUVEVRK0xDdXFyYldtOWZSRWZyYnFrVXpMYlg4bVFRZE5xcnZ1MnpqMUJobWwzVjY3VTNvTlFTL1FhQTRDSHc0Y2F2aHBmZHBYZVdYQ3pwc1ZBcHhXZCszVGNlcU9uM1E2WVBpSWZEaGhEWnZUVzU5cUZYK3hZek1hVkVwUk1IZllmRGJUTnlDZm5ycTlNVkc0TU9aMnd4N3VOUFdzVE1YMWI3VllhTldScGYxZlZNNkp1MDlVS2VIUitEREpjM1dNV25SbEFzWlc0a0dIVFlhUWVDeXZsOHBIWVBxOUl4RFFEa0NIMDZaMXZKMTlXMFc3NGlsRHB0Z1RFTVM5WDM5ekwxNzkxNjc4UWxRanNDSFUyclJOSm12NDAydjhyTjQzOXRnVElPQ1A4NzZ2cTRWVU5BenF4NnpJZkRoM0VMREM2cTBnZnQxaG1lNUJGZlFxclRpc3I0ZmpFUFF0UUxVNlRFWEFoL09xWlp2MHJFamwvZnQ4NjVtNENiaGN3bHVkRzU3VEVQNTJHTEdJYUFTQkQ1aVlkcXhJLy9iM3A3SjBzNzFnakVOVWNjd003WVlwZ2g4eEVLcmZKT3JiNzNwMGs3V3VuWm1FM1VNcy9ZRWduRUlRRmdFUG1Lem9LZkhxeklzYVZ3WkdQQ3Z3czJMOGpITWxiUnhxazZ2cncxdVVBNllJUEFSRzgzWWlWTGF1Ymg5ZStJM1NyRXRHTk9nVnNxWmdyOThiREZ0bG9pcW1qT0lPTTN2NnZMSElIOXJlTFB0ZjdTMmVqVmpZLzZIUjU2b2xWS1A4dkhJS3Yrd0dRdWJDSHpFVG0yYTU1dWJqWDZzNnZrSy9Uc0dCM01YK3Q3MGloOXdoWklPWXFmQmFyZEc2RlRSYndkNTJjUUY0a1RnSXhHcTVadk8yZkdtTjNFSmZTQWNaNEUva3JQTk5kaDNlNmxrM0xYalRVL1Z6TW9vWmFCU2d3WVhHdTdjdWZQQlNyN09XZUJYY2lkK0ZOdE45ZlYrcTJZVXVoTDNteFRlQ3hlSTA1NDllLzVVeVkranBJTkVhYmlhNlFWWmdRdWJOeFA2UUFVSWZDUk9xL3dvOVh4dk92UXA3d0J6SS9DUk9MVlhScTNuZTlQbEhUWnlnZGtSK0VnRjFmUHZzREFWVXh1NVdaMmpEN2hXTlRVMVZkR1BxS3FxcXV3THAybWlIeHUzQ0V1MWVKVm5vbEtKS0s4WFp5SGZkSVgxNU9Sa3FOYzROVFZWVmNuWFZiekN2Ly8rKzBPbGQ5Z0RCcnpwVGR3b0YyVUZkSEhXWkgxOTdtYnZJUC9DWm1lWWJIWmEwbUdGRHhPNktDdHE1NDQzUFlaQkl4em80RUZXdU03TWlnTi80Y0tGbDhKK2N5NitnaW5OMjdFUit0NTBCMDllYnFLQ2ZEUEp6RERaWEhIZ0wxbXlaRFRzZ2JEQ1J4UTJRMStqR000M05XWCtkb25JTjVQTURKUE5GUWYrL1Bueno0VTlFRmI0aU1wbTZIODNQdTc5WS8xNnYxK2YxVDdTeUNRencyUnp4WUcvZVBIaW9iQUhRdUREQnB1aDcwMzM2N1BhUnhxWlpHYVliSzQ0OEJjc1dQQzNzQWVpTy9rQU50Z08vV0MxcjlyK2QvdzlSVXFZWkdhWWJLNjREOTh6Nk1YM3Z1OFBEZnNVWUZaZmQzZDdsM2J2dG5xQ2RJV3Z4anZNNHlwZEpLeXFxcUoyK245UmFRKytGN1l0czZHaDRldXdCMk15NmhPWWpWbzJGL2IyV2owL2F0OVVKdzg5KzBpU1NWYUd6ZVJRZ1Y5WFYzY203QUZSeDRkdFdvbmZjZWhRNU5rNzEyUDRHcEpra3BWaE16bFU0TjkxMTEyZmhEMGdBaDh1VkxlMmVvdEdSaUpQMlN4M2RXaUllajRTWTVLVllUTTVWT0NiZE9wUTBvRXJ3Y0ExcTV1NUJENFNZcEtWWVRNNTFLYXRaN2h4ZStyVUthKyt2ajdzMDRDS1hlN3A4VGQwcHlMT2NGS3BTTDg5QUhGU2Q4N3k1Y3RELzhRd0c3YWV5U3dkazQzYlVxa1U5aWxBS1BPN3V2elZ2czBTRHhBWGs0dzB5V0tUd0E4OVlvR3lEdUp3YzFPVFg5ZVBNbTFUM3dPSW0yR0hUdWdzRGgzNFM1Y3UvV1BZNXd3TURJUjlDbUJNclpzcXpZUmQ3Yy9mdG8zNStVaUVTVWFhWkhIb3dML3p6anQvRi9ZNUhtVWR4T3pQUkVjQUFBbFdTVVJCVkN6bzR0RnF2NUwyVFgwNDZJTUNpSnRwTnBwa2NlakFmK21sbDhhcDR5TXJGT0lLL2x2YTJtWTlZdjEvM0IwTFNUR3QzeXVMd3o2djJ1UTEzbmZmZlg4ZEhSMXRDZk1jQWg5SlVmdW1icEt1SzJtL0taWDhvV2tLZDlYcjU3VzNVN2RIb2t5eVVSbHNjc3hHZ1gvUFBmZnM5end2Vk9EcnRsMTlmWDFlSi9OS2tCQUYrMjJFTzFKRW1XaHlPOWpwREE0dGRCOSs0TzY3Nzc1eSt2VHBVQjhZYlcxdHJQUUJZRnA3ZTN2b0RkdGx5NVpkL2VLTEwyNHhPWWZHOTdSZHMyYk4zOE0rUnkrTWtja0E4UDNGVmliZE9TYlpHekFPL0pVclYrNHhlVjRmTjVRR0FPTXNOTTFlTDBwSnh6TXM2OVRVMUhDdld3Q0ZWMXRiRzdwK0g2V2M0MFZaNGNzRER6enc1N0RQQ1RadkFhQ29URGRyVFRLM1hLVEFYN0ZpeFlzbXordm1BaGNBQldhYWdhYVpHNGhVMHZHKzMwQTQ5L0hISDRlK1l1WEFnUVArRGpVQUZJazZGVGR1M0JqNkZkOS8vLzBUUjQ4ZVhSemxWRVZhNFV0VFU5TWZUSjdYMDlNVDlVY0RRT2FZWnA5cDFwYUx2TUwzRERkdjVkQ2hRMTRyczhjQkZJU21ZcTVmdno3MGk0MjZXUnVJdk1MM0ltd2tjTlV0Z0NJeHpieW9tN1VCSzRHL2F0V3Fqa1dMRm9YK1ZXRjhmSnlPSFFDRm9LeFQ1b1dsYkZYRzJqaEhWa282M3ZkakU0WVBIandZZWxDSit2SjF4Vmt0a3dvQjVKU3VQZEp0WGsxYU1UZHMyREF5TUREUWJPUE1XRm5oeStyVnE1ODNlWjVPQUJ1NEFQSk1HV2NTOWw2RWJKMkp0UlcrUFB6d3d5Yy8vUERESDVrOGQzaDRXTHZRMW80RkFOSmdaR1RFYTI0Mlc2QS85TkJELy9uQkJ4K3N0UFV5ckszd3BibTUyWGdYdHF1cnkrYWhBRUFxUk1tMktKazZFNnVCdjJmUG5qODkvdmpqUXliUEhSb2FvclFESUZlVWFjbzJFOHBTWmFyTjgyRTE4TDBJSFR2ZTlPWEdqRThHa0FmS010TVJDalk3YzhwWkQzemRaM0hEaGczaGh6eFBiK0F5YmdGQUhpakxURGRxbGFFbTk2eTlFYXVidHVWTXI3NlZYYnQyTVdBTlFHWXB2M2J2M20xMCtMYXVxcDJKOVJWKzRORkhILzIxNlhOMW9uUUpNZ0JramJMTE5PeTlpTmw1STg1VytMSnUzYnIvUG5Ma3lCS1Q1M0pCRm9Dc2lYS0JsYXhkdS9iczRjT0gvNitybCsxc2hlOTlIL2cvTTkzQTFRbGpzQnFBTEZGbW1ZYTlzbEtaNmZMbE9nMzhLQnU0Y3V6WU1RYXNBY2dFWlpVeXk1U3JqZHB5VGtzNkFkT2JwQVRZeEFXUVpsRTJhVDFMTnplcGhOTVZmdUNSUng1cE1pM3RlTk9idUV6VkJKQkd5cVlvWWE5c1ZFYkc4ZEppQ1h6OW12TGtrMCsrSE9WN2JONjhtZEFIa0NyS0pHVlRGTXBHMTZXY1FDd2xuWURwQ09XQU9uZlU4c1NRTlFCSjAxQzBLSnUwbnVYUng1V0laWVVmdVBmZWU5c2JHaHErTm4xKzBMbWpFdzBBU2JFUjlzcENaV0tjTHlIV3dOZXZMZTN0N1E5RnFlY1QrZ0NTWkNQc2xZSEt3cmhLT1lGWUE5K2JucWdadFo0ZmhENDFmUUJ4VXVaRURYdHZ1bTV2ZXhKbUpXS3Q0WmQ3NnFtbkRyejExbHVSZjUzcDdlMmxWeCtBY3pZMmFHWFRwazJsTjk5OGMyTVM3MWhpZ2U5RnZFTldPZnIwQWJnVXRjOCtZUHNPVm1FbEd2aWVoWXV5QWgwZEhaUjRBRmluQ2tKL2YzL2tieHZYeFZWemliMkdmejFkY0JDbGN5ZWdOMFR0bWhwZUJBQlJLVXVVS1RiQ1hoa1gxOFZWYzBrODhMVkwvZGhqajYyMkVmcWFZNkZKZFl4V0JoQ0ZNa1JaRW1VMlRrRFpwb3lMdXlObkpva0h2bWVwWFRPZzNmUDE2OWRUMHdkZ1JObWhESW5haWVOTnQxK21KZXk5Tk5Ud3krM1lzZU9KMTE5Ly9UL09uejlmWmVQN05UWTJlcVZTeWYra0JvQzU2UDRidWkyaGpWVzlOeDMyenp6enpMKzk4c29ydjAvTGlVL0ZDaitnRTZNVFpHT2w3MDJYZUZTRDA1M2pBV0EyeWdobFJaN0Qza3ZiQ2ord2MrZk9CMHVsMG9lam82TzMyZnFlTFMwdDE5NVVBUENtcjVydDZ1cnlob2FHckowUDFleFZvazdpd3FvYlNXWGd5NHN2dmxqMzdydnZuckFaK3Q1MHo3N2VZRzZkQ0JTWE9uQzBBTFRSVzE4dVRSdTBNMGx0NEh2VG9mLysrKytQMk9qVEw2ZXBtM3F6dVVJWEtCNWRyNk5GbjQxTjJYTHFzMWZyWlZyRDNrdDc0QWRzWFpGN3ZicTZ1bXV6TVFEa20xb3R0Y2diSDdlZngwbGZRVnVwVkczYXprWW5Vdk1uYkg5ZnZmRnF2MUxncTVzSFFQN28zN2IramV2ZnVvdXdWelpsSWV4OVd1Rm41ZkhjYzgvOVp0R2lSZC9wc0YwODZ1cnFwbnA3ZTZjQVpKLytMZXZmdEt1OFVCWXBrN0tVb1prbzZaUnowY0Z6UGRYNFZlUFRyMy8wOEFQWm9WNTZsV20xUjJlN1JsOHV6WjA0YzhsYzRIdlRtN21mZlBKSktjcnRFaXZWMXRibVg0ekJCaStRWGdwNWxXNEdCZ2FjSDZOdVM2ZzdWYVY1YzNZMm1Rejh3Sll0VzM3ejl0dHZ2MkRyeXR5NWFOV3Y0QThlQUpLbGdBOGVMbGZ6QVYxTXBSdVg3TisvLzkreit0Wm5PdkE5aDYyYk42S1Z2emFDRlA2VWZRRDNWSzVSdUt2YkpvNlZmTGtzdEZ4V0l2T0JIOUFkdEE0ZVBOZ1d4MnIvZW1ydlZQanJLbDQ5YVBNRW9sT3c2MHBZUGZTZlhYVFkzSWhXOVJzMmJCaEk2ZzVWdHVVbThMM3AxZjdodzRmL2N1VElrU1ZKSDRzR3QybmxIM3dJNk1yZTRFOEEzOU1WcndyMDRFODl0SkszTmRNbWlyVnIxNTVkdDI3ZHo3SytxaStYcThBUGJOMjZ0ZXU5OTk3NzdlblRwNnZUY1VRL3BOaytNK0czQStUSmJQZW1VTERIVVhjM3NXelpzcXVQUHZyb3IxOTk5ZFg4VFYzTVVnOXAyTWVtVFpzT3VPemI1OEdEUjM0ZXlncGxScDR6TVpjci9ISXE4M3o2NmFmOTc3enp6c3hMYWdDRjkvampqdyt0V3JXcUkwL2xtNW5rUHZBRHVtQnJlSGk0ejhWTUhnRFpwQms0emMzTm5WbTdnTXBVWVFJL29PQS9jZUxFYTRPRGc0MUpkUFFBU0pZNmIxcGJXNCt0WHIzNithSUVmYUJ3Z1I4SVNqMGZmZlRSejlPOHVRdkFEbTNHUHZEQUEzOHVRdWxtTm9VTi9ISlBQLzMwNnlNakk3K00rK0l0QU83cG9xbW1wcVkvdlBIR0c4OFUvWFFUK0dWVTd2bnNzODllWXRVUFpGdXdtbCt4WXNXTFJTdmJ6SVhBbjhXT0hUdWVPSG55NU02alI0LyttUEFIMGs4aHYyYk5tcit2WExseVQ5cHVIcDRXQkg0RkZQNmZmLzc1bHVQSGovL1U1VmhtQU9Gb1RQRjk5OTMzMTN2dXVXYy9JWDlqQkg1STJ1ejk2cXV2bmp0ejVzd3ZSa2RIRy9nQUFPS2pnRzlvYUJoZHVuVHBIKys4ODg3ZkZYWHoxUlNCYjRGR09adzdkNjdseXkrL3ZIZDhmSHdwSHdKQWRBcjN1cnE2TTNmZGRkY25peGN2SHNybHFJT1lFZmlPYUFQNDRzV0xQOUVId2VYTGx4ZWZQWHUyNGNLRkM3ZnFwOUVOQkh6ZlBhTS9GeTVjZUduSmtpV2o4K2ZQUDZkZ1g3Qmd3ZC9ZYUhXRHdBZUFncmlKTnhvQWlvSEFCNENDSVBBQm9DQUlmQUFvQ0FJZkFBcUN3QWVBZ2lEd0FhQWdDSHdBS0FnQ0h3Q0t3UE84L3c4dm9XVGNDVFNWMEFBQUFBQkpSVTVFcmtKZ2dnPT0iLCJtZWRpYXR5cGUiOiJpbWFnZS9wbmcifV0sImluc3RhbGwiOnsic3BlYyI6eyJjbHVzdGVyUGVybWlzc2lvbnMiOlt7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJwb2RzIiwicG9kcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImdldCIsImNyZWF0ZSIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbImNvbmZpZGVudGlhbGNvbnRhaW5lcnMub3JnIl0sInJlc291cmNlcyI6WyJwZWVycG9kcyIsInBvZHMiXSwidmVyYnMiOlsiY3JlYXRlIiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJuYW1lc3BhY2VzIl0sInZlcmJzIjpbImdldCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbIm5vZGVzL3N0YXR1cyJdLCJ2ZXJicyI6WyJwYXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiLCJtYWNoaW5lY29uZmlndXJhdGlvbi5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiLCJjb250YWluZXJydW50aW1lY29uZmlncyIsImVuZHBvaW50cyIsImV2ZW50cyIsIm1hY2hpbmVjb25maWdwb29scyIsIm1hY2hpbmVjb25maWdzIiwibm9kZXMiLCJwZXJzaXN0ZW50dm9sdW1lY2xhaW1zIiwicG9kcyIsInNlY3JldHMiLCJzZXJ2aWNlcyIsInNlcnZpY2VzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYWRtaXNzaW9ucmVnaXN0cmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibXV0YXRpbmd3ZWJob29rY29uZmlndXJhdGlvbnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbImRhZW1vbnNldHMiLCJkZXBsb3ltZW50cyIsInJlcGxpY2FzZXRzIiwic3RhdGVmdWxzZXRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VOYW1lcyI6WyJtYW5hZ2VyLXJvbGUiXSwicmVzb3VyY2VzIjpbImRhZW1vbnNldHMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiYmF0Y2giXSwicmVzb3VyY2VzIjpbImpvYnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImNsb3VkY3JlZGVudGlhbC5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImNyZWRlbnRpYWxzcmVxdWVzdHMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbImNvbmZpZGVudGlhbGNvbnRhaW5lcnMub3JnIl0sInJlc291cmNlcyI6WyJwZWVycG9kY29uZmlncyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJjb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJdLCJyZXNvdXJjZXMiOlsicGVlcnBvZGNvbmZpZ3MvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciXSwicmVzb3VyY2VzIjpbInBlZXJwb2Rjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJjb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJdLCJyZXNvdXJjZXMiOlsicGVlcnBvZHMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciXSwicmVzb3VyY2VzIjpbInBlZXJwb2RzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbImNvbmZpZGVudGlhbGNvbnRhaW5lcnMub3JnIl0sInJlc291cmNlcyI6WyJwZWVycG9kcy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiY29uZmlnLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsiY2x1c3RlcnZlcnNpb25zIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJjb25maWcub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJpbmZyYXN0cnVjdHVyZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VjcmV0cyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInNlY3JldHMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJrYXRhY29uZmlndXJhdGlvbi5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImthdGFjb25maWdzIiwia2F0YWNvbmZpZ3MvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJrYXRhY29uZmlndXJhdGlvbi5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImthdGFjb25maWdzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJub2RlLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsicnVudGltZWNsYXNzZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHkub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJzZWN1cml0eWNvbnRleHRjb25zdHJhaW50cyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ1c2UiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRoZW50aWNhdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInRva2VucmV2aWV3cyJdLCJ2ZXJicyI6WyJjcmVhdGUiXX0seyJhcGlHcm91cHMiOlsiYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInN1YmplY3RhY2Nlc3NyZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6ImRlZmF1bHQifV0sImRlcGxveW1lbnRzIjpbeyJsYWJlbCI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJjb250cm9sbGVyLW1hbmFnZXIiLCJzcGVjIjp7InJlcGxpY2FzIjoxLCJzZWxlY3RvciI6eyJtYXRjaExhYmVscyI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdHJhdGVneSI6eyJyb2xsaW5nVXBkYXRlIjp7Im1heFN1cmdlIjowLCJtYXhVbmF2YWlsYWJsZSI6MX0sInR5cGUiOiJSb2xsaW5nVXBkYXRlIn0sInRlbXBsYXRlIjp7Im1ldGFkYXRhIjp7ImxhYmVscyI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzcGVjIjp7ImNvbnRhaW5lcnMiOlt7ImFyZ3MiOlsiLS1tZXRyaWNzLWJpbmQtYWRkcmVzcz0xMjcuMC4wLjE6ODA4MCIsIi0tbGVhZGVyLWVsZWN0Il0sImNvbW1hbmQiOlsiL21hbmFnZXIiXSwiZW52IjpbeyJuYW1lIjoiUEVFUlBPRFNfTkFNRVNQQUNFIiwidmFsdWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtb3BlcmF0b3IifSx7Im5hbWUiOiJSRUxBVEVEX0lNQUdFX0tBVEFfTU9OSVRPUiIsInZhbHVlIjoicmVnaXN0cnkucmVkaGF0LmlvL29wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy9vc2MtbW9uaXRvci1yaGVsOUBzaGEyNTY6OTYwNTQ5OWY2YmM5MzY0ZGU4OWM4ODk4NTc0ODBiOTU3ODg4NzY1OTAxYTUzZmY5OTZkMzc4ZDIwNWMzNzA5MCJ9LHsibmFtZSI6IlNBTkRCT1hFRF9DT05UQUlORVJTX0VYVEVOU0lPTiIsInZhbHVlIjoic2FuZGJveGVkLWNvbnRhaW5lcnMifSx7Im5hbWUiOiJSRUxBVEVEX0lNQUdFX0NBQSIsInZhbHVlIjoicmVnaXN0cnkucmVkaGF0LmlvL29wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy9vc2MtY2xvdWQtYXBpLWFkYXB0b3ItcmhlbDlAc2hhMjU2OjFmMjE5ZTAzYjExNTJjMDMwNmExMzFmM2Y0MTZmM2ZhNTFiZGRkNjE1MmRkZjM1NmQwOTI3NDA5ZTZjMDlmOGYifSx7Im5hbWUiOiJSRUxBVEVEX0lNQUdFX1BFRVJQT0RTX1dFQkhPT0siLCJ2YWx1ZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMvb3NjLWNsb3VkLWFwaS1hZGFwdG9yLXdlYmhvb2stcmhlbDlAc2hhMjU2OjIxZjQ4ZDEyOTRjYTRmNmJhMDRmODVlYzUxMDZiMDI1MWUxNTQyMzg0NTU0OTBlOGZmNzk4ZGRmYTE4ZjI1N2MifSx7Im5hbWUiOiJSRUxBVEVEX0lNQUdFX1BPRFZNX1BBWUxPQUQiLCJ2YWx1ZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMvb3NjLXBvZHZtLXBheWxvYWQtcmhlbDlAc2hhMjU2OmVhNWNjMzJkNDBmY2YzZGRiNTRmMmMyNTRjYzFlZmEwYWMyYjZiMzZhMDQ4Yzg3MDZlY2MzNTc4OWI3MGI0ZTQifSx7Im5hbWUiOiJSRUxBVEVEX0lNQUdFX1BPRFZNX0JVSUxERVIiLCJ2YWx1ZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMvb3NjLXBvZHZtLWJ1aWxkZXItcmhlbDlAc2hhMjU2OjZlZmVkMDQ4NDg3ZjMyYTM2YzhmNmVkNWZiOTUzYjViZWZjZjBjMGY4NTJkNDUyNGNiZDg5ZDZkMzI2ODAzZGIifV0sImVudkZyb20iOlt7InNlY3JldFJlZiI6eyJuYW1lIjoicGVlci1wb2RzLXNlY3JldCIsIm9wdGlvbmFsIjp0cnVlfX0seyJjb25maWdNYXBSZWYiOnsibmFtZSI6InBlZXItcG9kcy1jbSIsIm9wdGlvbmFsIjp0cnVlfX1dLCJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMvb3NjLXJoZWw5LW9wZXJhdG9yQHNoYTI1NjowY2RlNWIwODFhMjM1ZDA2NTQzMDMxMTlkYWZhYWM2MTI3NzMzYWMzMjYyMDc0NTBkNjE0MWRkMDg5MTBjODVlIiwiaW1hZ2VQdWxsUG9saWN5IjoiQWx3YXlzIiwibmFtZSI6Im1hbmFnZXIiLCJwb3J0cyI6W3siY29udGFpbmVyUG9ydCI6OTQ0MywibmFtZSI6IndlYmhvb2stc2VydmVyIiwicHJvdG9jb2wiOiJUQ1AifV0sInJlc291cmNlcyI6eyJsaW1pdHMiOnsiY3B1IjoiMjAwbSIsIm1lbW9yeSI6IjI1Nk1pIn0sInJlcXVlc3RzIjp7ImNwdSI6IjEwMG0iLCJtZW1vcnkiOiI0ME1pIn19LCJzZWN1cml0eUNvbnRleHQiOnsiYWxsb3dQcml2aWxlZ2VFc2NhbGF0aW9uIjpmYWxzZSwiY2FwYWJpbGl0aWVzIjp7ImRyb3AiOlsiQUxMIl19fSwidm9sdW1lTW91bnRzIjpbeyJtb3VudFBhdGgiOiIvdG1wL2s4cy13ZWJob29rLXNlcnZlci9zZXJ2aW5nLWNlcnRzIiwibmFtZSI6ImNlcnQiLCJyZWFkT25seSI6dHJ1ZX0seyJtb3VudFBhdGgiOiIvcm9vdC8uc3NoLyIsIm5hbWUiOiJzc2giLCJyZWFkT25seSI6dHJ1ZX1dfSx7ImFyZ3MiOlsiLS1zZWN1cmUtbGlzdGVuLWFkZHJlc3M9MC4wLjAuMDo4NDQzIiwiLS11cHN0cmVhbT1odHRwOi8vMTI3LjAuMC4xOjgwODAvIiwiLS1sb2d0b3N0ZGVycj10cnVlIiwiLS12PTAiXSwiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2Uta3ViZS1yYmFjLXByb3h5QHNoYTI1NjoxMTcyZTE1MGZmZjIyYzVlZWFiNTcyZjI2OTYxZjNmNTNmYmY4OTZlZTc2ZDA4Yzc1MDNjZmUyNzc3YzU1NDU4IiwibmFtZSI6Imt1YmUtcmJhYy1wcm94eSIsInBvcnRzIjpbeyJjb250YWluZXJQb3J0Ijo4NDQzLCJuYW1lIjoiaHR0cHMiLCJwcm90b2NvbCI6IlRDUCJ9XSwicmVzb3VyY2VzIjp7ImxpbWl0cyI6eyJjcHUiOiI1MDBtIiwibWVtb3J5IjoiMTI4TWkifSwicmVxdWVzdHMiOnsiY3B1IjoiNW0iLCJtZW1vcnkiOiI2NE1pIn19LCJzZWN1cml0eUNvbnRleHQiOnsiYWxsb3dQcml2aWxlZ2VFc2NhbGF0aW9uIjpmYWxzZSwiY2FwYWJpbGl0aWVzIjp7ImRyb3AiOlsiQUxMIl19fX1dLCJzZWN1cml0eUNvbnRleHQiOnsicnVuQXNOb25Sb290Ijp0cnVlLCJzZWNjb21wUHJvZmlsZSI6eyJ0eXBlIjoiUnVudGltZURlZmF1bHQifX0sInRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzIjoxMCwidG9sZXJhdGlvbnMiOlt7ImVmZmVjdCI6Ik5vU2NoZWR1bGUiLCJrZXkiOiJub2RlLXJvbGUua3ViZXJuZXRlcy5pby9tYXN0ZXIiLCJvcGVyYXRvciI6IkV4aXN0cyJ9LHsiZWZmZWN0IjoiTm9FeGVjdXRlIiwia2V5Ijoibm9kZS5rdWJlcm5ldGVzLmlvL3VucmVhY2hhYmxlIiwib3BlcmF0b3IiOiJFeGlzdHMiLCJ0b2xlcmF0aW9uU2Vjb25kcyI6MTIwfSx7ImVmZmVjdCI6Ik5vRXhlY3V0ZSIsImtleSI6Im5vZGUua3ViZXJuZXRlcy5pby9ub3QtcmVhZHkiLCJvcGVyYXRvciI6IkV4aXN0cyIsInRvbGVyYXRpb25TZWNvbmRzIjoxMjB9LHsiZWZmZWN0IjoiTm9TY2hlZHVsZSIsImtleSI6Im5vZGUua3ViZXJuZXRlcy5pby9tZW1vcnktcHJlc3N1cmUiLCJvcGVyYXRvciI6IkV4aXN0cyJ9XSwidm9sdW1lcyI6W3sibmFtZSI6ImNlcnQiLCJzZWNyZXQiOnsiZGVmYXVsdE1vZGUiOjQyMCwic2VjcmV0TmFtZSI6IndlYmhvb2stc2VydmVyLWNlcnQifX0seyJuYW1lIjoic3NoIiwic2VjcmV0Ijp7ImRlZmF1bHRNb2RlIjozODQsIm9wdGlvbmFsIjp0cnVlLCJzZWNyZXROYW1lIjoic3NoLWtleS1zZWNyZXQifX1dfX19fSx7ImxhYmVsIjp7ImFwcCI6Im9wZXJhdG9yLW1ldHJpY3Mtc2VydmVyIn0sIm5hbWUiOiJvcGVyYXRvci1tZXRyaWNzLXNlcnZlciIsInNwZWMiOnsicmVwbGljYXMiOjEsInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImFwcCI6Im9wZXJhdG9yLW1ldHJpY3Mtc2VydmVyIn19LCJzdHJhdGVneSI6e30sInRlbXBsYXRlIjp7Im1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJvcGVyYXRvci1tZXRyaWNzLXNlcnZlciJ9fSwic3BlYyI6eyJjb250YWluZXJzIjpbeyJjb21tYW5kIjpbIi9tZXRyaWNzLXNlcnZlciJdLCJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMvb3NjLW1vbml0b3ItcmhlbDlAc2hhMjU2Ojk2MDU0OTlmNmJjOTM2NGRlODljODg5ODU3NDgwYjk1Nzg4ODc2NTkwMWE1M2ZmOTk2ZDM3OGQyMDVjMzcwOTAiLCJuYW1lIjoibWV0cmljcy1zZXJ2ZXIiLCJwb3J0cyI6W3siY29udGFpbmVyUG9ydCI6ODA5MX1dLCJyZXNvdXJjZXMiOnsicmVxdWVzdHMiOnsiY3B1IjoiNTBtIiwibWVtb3J5IjoiNjRNaSJ9fX1dfX19fV0sInBlcm1pc3Npb25zIjpbeyJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiY29uZmlnbWFwcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSJdfSx7ImFwaUdyb3VwcyI6WyJjb29yZGluYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJsZWFzZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJldmVudHMiXSwidmVyYnMiOlsiY3JlYXRlIiwicGF0Y2giXX1dLCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJkZWZhdWx0In1dfSwic3RyYXRlZ3kiOiJkZXBsb3ltZW50In0sImluc3RhbGxNb2RlcyI6W3sic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiT3duTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOnRydWUsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6IkFsbE5hbWVzcGFjZXMifV0sImtleXdvcmRzIjpbInNhbmRib3hlZC1jb250YWluZXJzIiwia2F0YSJdLCJsaW5rcyI6W3sibmFtZSI6IlNhbmRib3hlZCBDb250YWluZXJzIE9wZXJhdG9yIiwidXJsIjoiaHR0cHM6Ly93d3cuZ2l0aHViLmNvbS9vcGVuc2hpZnQvc2FuZGJveGVkLWNvbnRhaW5lcnMtb3BlcmF0b3IifV0sIm1haW50YWluZXJzIjpbeyJlbWFpbCI6InN1cHBvcnRAcmVkaGF0LmNvbSciLCJuYW1lIjoiJ1JlZCBIYXQifV0sIm1hdHVyaXR5IjoiYmV0YSIsIm1pbkt1YmVWZXJzaW9uIjoiMS4yOC4wIiwicHJvdmlkZXIiOnsibmFtZSI6IlJlZCBIYXQifSwicmVsYXRlZEltYWdlcyI6W3siaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0LXNhbmRib3hlZC1jb250YWluZXJzL29zYy1yaGVsOS1vcGVyYXRvckBzaGEyNTY6MGNkZTViMDgxYTIzNWQwNjU0MzAzMTE5ZGFmYWFjNjEyNzczM2FjMzI2MjA3NDUwZDYxNDFkZDA4OTEwYzg1ZSIsIm5hbWUiOiJtYW5hZ2VyIn0seyJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQ0L29zZS1rdWJlLXJiYWMtcHJveHlAc2hhMjU2OjExNzJlMTUwZmZmMjJjNWVlYWI1NzJmMjY5NjFmM2Y1M2ZiZjg5NmVlNzZkMDhjNzUwM2NmZTI3NzdjNTU0NTgiLCJuYW1lIjoia3ViZS1yYmFjLXByb3h5In0seyJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMvb3NjLW1vbml0b3ItcmhlbDlAc2hhMjU2Ojk2MDU0OTlmNmJjOTM2NGRlODljODg5ODU3NDgwYjk1Nzg4ODc2NTkwMWE1M2ZmOTk2ZDM3OGQyMDVjMzcwOTAiLCJuYW1lIjoibWV0cmljcy1zZXJ2ZXIifSx7ImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL29wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy9vc2MtbW9uaXRvci1yaGVsOUBzaGEyNTY6OTYwNTQ5OWY2YmM5MzY0ZGU4OWM4ODk4NTc0ODBiOTU3ODg4NzY1OTAxYTUzZmY5OTZkMzc4ZDIwNWMzNzA5MCIsIm5hbWUiOiJrYXRhX21vbml0b3IifSx7ImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL29wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy9vc2MtY2xvdWQtYXBpLWFkYXB0b3ItcmhlbDlAc2hhMjU2OjFmMjE5ZTAzYjExNTJjMDMwNmExMzFmM2Y0MTZmM2ZhNTFiZGRkNjE1MmRkZjM1NmQwOTI3NDA5ZTZjMDlmOGYiLCJuYW1lIjoiY2FhIn0seyJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMvb3NjLWNsb3VkLWFwaS1hZGFwdG9yLXdlYmhvb2stcmhlbDlAc2hhMjU2OjIxZjQ4ZDEyOTRjYTRmNmJhMDRmODVlYzUxMDZiMDI1MWUxNTQyMzg0NTU0OTBlOGZmNzk4ZGRmYTE4ZjI1N2MiLCJuYW1lIjoicGVlcnBvZHNfd2ViaG9vayJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0LXNhbmRib3hlZC1jb250YWluZXJzL29zYy1wb2R2bS1wYXlsb2FkLXJoZWw5QHNoYTI1NjplYTVjYzMyZDQwZmNmM2RkYjU0ZjJjMjU0Y2MxZWZhMGFjMmI2YjM2YTA0OGM4NzA2ZWNjMzU3ODliNzBiNGU0IiwibmFtZSI6InBvZHZtX3BheWxvYWQifSx7ImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL29wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy9vc2MtcG9kdm0tYnVpbGRlci1yaGVsOUBzaGEyNTY6NmVmZWQwNDg0ODdmMzJhMzZjOGY2ZWQ1ZmI5NTNiNWJlZmNmMGMwZjg1MmQ0NTI0Y2JkODlkNmQzMjY4MDNkYiIsIm5hbWUiOiJwb2R2bV9idWlsZGVyIn1dLCJyZXBsYWNlcyI6InNhbmRib3hlZC1jb250YWluZXJzLW9wZXJhdG9yLnYxLjcuMCIsInZlcnNpb24iOiIxLjguMSIsIndlYmhvb2tkZWZpbml0aW9ucyI6W3siYWRtaXNzaW9uUmV2aWV3VmVyc2lvbnMiOlsidjEiXSwiY29udGFpbmVyUG9ydCI6NDQzLCJkZXBsb3ltZW50TmFtZSI6ImNvbnRyb2xsZXItbWFuYWdlciIsImZhaWx1cmVQb2xpY3kiOiJGYWlsIiwiZ2VuZXJhdGVOYW1lIjoidmthdGFjb25maWcua2IuaW8iLCJydWxlcyI6W3siYXBpR3JvdXBzIjpbImthdGFjb25maWd1cmF0aW9uLm9wZW5zaGlmdC5pbyJdLCJhcGlWZXJzaW9ucyI6WyJ2MSJdLCJvcGVyYXRpb25zIjpbIkNSRUFURSJdLCJyZXNvdXJjZXMiOlsia2F0YWNvbmZpZ3MiXX1dLCJzaWRlRWZmZWN0cyI6Ik5vbmUiLCJ0YXJnZXRQb3J0Ijo5NDQzLCJ0eXBlIjoiVmFsaWRhdGluZ0FkbWlzc2lvbldlYmhvb2siLCJ3ZWJob29rUGF0aCI6Ii92YWxpZGF0ZS1rYXRhY29uZmlndXJhdGlvbi1vcGVuc2hpZnQtaW8tdjEta2F0YWNvbmZpZyJ9XX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlByb21ldGhldXNSdWxlIiwibWV0YWRhdGEiOnsibmFtZSI6Im9zYy1hbGVydHMifSwic3BlYyI6eyJncm91cHMiOlt7Im5hbWUiOiJvc2NfYWxlcnRzIiwicnVsZXMiOlt7ImFsZXJ0IjoiS2F0YVJlbW90ZVdvcmtsb2FkRmFpbHVyZUhpZ2giLCJhbm5vdGF0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBmYWlsdXJlIHJhdGlvIG9mIGthdGEtcmVtb3RlIHdvcmtsb2FkcyBpcyBhYm92ZSAyNSUgZm9yIG1vcmUgdGhhbiAzMCBtaW51dGVzLiBUaGlzIG1heSBpbmRpY2F0ZSBpc3N1ZXMgd2l0aCB0aGUgcnVudGltZSBvciBjb25maWd1cmF0aW9uLiIsInN1bW1hcnkiOiJIaWdoIEthdGEgUmVtb3RlIFdvcmtsb2FkIEZhaWx1cmUgUmF0aW8ifSwiZXhwciI6ImthdGFfcmVtb3RlX3dvcmtsb2FkX2ZhaWx1cmVfcmF0aW8gXHUwMDNlIDI1IiwiZm9yIjoiMzBtIiwibGFiZWxzIjp7InNldmVyaXR5Ijoid2FybmluZyJ9fSx7ImFsZXJ0Ijoia2F0YV9hY3RpdmVfaW5zdGFuY2UiLCJhbm5vdGF0aW9ucyI6eyJzdW1tYXJ5IjoiS2F0YSBpbnN0YW5jZSBhbGl2ZSBzaWduYWwifSwiZXhwciI6InZlY3RvcigxKSIsImxhYmVscyI6eyJwdXJwb3NlIjoiYWxpdmVfc2lnbmFsIiwic2V2ZXJpdHkiOiJpbmZvIn19XX1dfX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlByb21ldGhldXNSdWxlIiwibWV0YWRhdGEiOnsibmFtZSI6InByb21ldGhldXMtc2FuZGJveGVkLWNvbnRhaW5lcnMtcnVsZXMifSwic3BlYyI6eyJncm91cHMiOlt7Im5hbWUiOiJrYXRhX21vbml0b3JfcnVsZXMiLCJydWxlcyI6W3siZXhwciI6InN1bShrYXRhX21vbml0b3JfcnVubmluZ19zaGltX2NvdW50KSIsInJlY29yZCI6ImNsdXN0ZXI6a2F0YV9tb25pdG9yX3J1bm5pbmdfc2hpbV9jb3VudDpzdW0ifV19XX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7InJlbGVhc2UiOiJwcm9tZXRoZXVzLW9wZXJhdG9yIn0sIm5hbWUiOiJvcGVyYXRvci1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7ImludGVydmFsIjoiMzBzIiwicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6IjgwOTEiLCJzY3JhcGVUaW1lb3V0IjoiMTBzIn1dLCJzZWxlY3RvciI6eyJtYXRjaExhYmVscyI6eyJhcHAiOiJvcGVyYXRvci1tZXRyaWNzLXNlcnZlciJ9fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sInNwZWMiOnsiZW5kcG9pbnRzIjpbeyJwb3J0IjoibWV0cmljcyJ9XSwibmFtZXNwYWNlU2VsZWN0b3IiOnsibWF0Y2hOYW1lcyI6WyJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtb3BlcmF0b3IiXX0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibWV0cmljcy1yZWFkZXIifSwicnVsZXMiOlt7Im5vblJlc291cmNlVVJMcyI6WyIvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtb25pdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInNlcnZpY2VzIiwiZW5kcG9pbnRzIiwicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibW9uaXRvci1yb2xlYmluZGluZyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im1vbml0b3Itcm9sZSJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogMjkwZjQ5NDcua2F0YWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc3ZjIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjg0NDMsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6Imh0dHBzIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoib3BlcmF0b3ItbWV0cmljcy1zZXJ2ZXIifSwibmFtZSI6Im9wZXJhdG9yLW1ldHJpY3Mtc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJwb3J0Ijo4MDkxLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOjgwOTF9XSwic2VsZWN0b3IiOnsiYXBwIjoib3BlcmF0b3ItbWV0cmljcy1zZXJ2ZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sIm5hbWUiOiJtZXRyaWNzIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJtZXRyaWNzIiwicG9ydCI6ODA5MCwicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjowfV0sInNlbGVjdG9yIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoid2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im1vbml0b3IifX0="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "caa",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-rhel9@sha256:1f219e03b1152c0306a131f3f416f3fa51bddd6152ddf356d0927409e6c09f8f"
        },
        {
            "name": "peerpods_webhook",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-webhook-rhel9@sha256:21f48d1294ca4f6ba04f85ec5106b0251e154238455490e8ff798ddfa18f257c"
        },
        {
            "name": "metrics-server",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-monitor-rhel9@sha256:9605499f6bc9364de89c889857480b957888765901a53ff996d378d205c37090"
        },
        {
            "name": "kata_monitor",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-monitor-rhel9@sha256:9605499f6bc9364de89c889857480b957888765901a53ff996d378d205c37090"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:ccdf9c3017206956153283b49ead9c0d30716673b5ec846467679d7af1f56d27"
        },
        {
            "name": "podvm_builder",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-podvm-builder-rhel9@sha256:6efed048487f32a36c8f6ed5fb953b5befcf0c0f852d4524cbd89d6d326803db"
        },
        {
            "name": "podvm_payload",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-podvm-payload-rhel9@sha256:ea5cc32d40fcf3ddb54f2c254cc1efa0ac2b6b36a048c8706ecc35789b70b4e4"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-rhel9-operator@sha256:0cde5b081a235d0654303119dafaac6127733ac326207450d6141dd08910c85e"
        },
        {
            "name": "kube-rbac-proxy",
            "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1172e150fff22c5eeab572f26961f3f53fbf896ee76d08c7503cfe2777c55458"
        }
    ]
}
{
    "schema": "olm.bundle",
    "name": "sandboxed-containers-operator.v1.9.0",
    "package": "sandboxed-containers-operator",
    "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:a37f38455aff326ef87ba4cef4c4c6268351f665265321f39d9e033de819cd69",
    "properties": [
        {
            "type": "olm.gvk",
            "value": {
                "group": "confidentialcontainers.org",
                "kind": "PeerPod",
                "version": "v1alpha1"
            }
        },
        {
            "type": "olm.gvk",
            "value": {
                "group": "kataconfiguration.openshift.io",
                "kind": "KataConfig",
                "version": "v1"
            }
        },
        {
            "type": "olm.package",
            "value": {
                "packageName": "sandboxed-containers-operator",
                "version": "1.9.0"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJwZWVycG9kcy5jb25maWRlbnRpYWxjb250YWluZXJzLm9yZyJ9LCJzcGVjIjp7Imdyb3VwIjoiY29uZmlkZW50aWFsY29udGFpbmVycy5vcmciLCJuYW1lcyI6eyJraW5kIjoiUGVlclBvZCIsImxpc3RLaW5kIjoiUGVlclBvZExpc3QiLCJwbHVyYWwiOiJwZWVycG9kcyIsInNpbmd1bGFyIjoicGVlcnBvZCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2QgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHBlZXJwb2RzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUGVlclBvZFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQZWVyUG9kIiwicHJvcGVydGllcyI6eyJjbG91ZFByb3ZpZGVyIjp7InR5cGUiOiJzdHJpbmcifSwiaW5zdGFuY2VJRCI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlBlZXJQb2RTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUGVlclBvZCIsInByb3BlcnRpZXMiOnsiY2xlYW5kIjp7InR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlByb21ldGhldXNSdWxlIiwibWV0YWRhdGEiOnsibmFtZSI6Im9zYy1hbGVydHMifSwic3BlYyI6eyJncm91cHMiOlt7Im5hbWUiOiJvc2NfYWxlcnRzIiwicnVsZXMiOlt7ImFsZXJ0IjoiS2F0YVJlbW90ZVdvcmtsb2FkRmFpbHVyZUhpZ2giLCJhbm5vdGF0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBmYWlsdXJlIHJhdGlvIG9mIGthdGEtcmVtb3RlIHdvcmtsb2FkcyBpcyBhYm92ZSAyNSUgZm9yIG1vcmUgdGhhbiAzMCBtaW51dGVzLiBUaGlzIG1heSBpbmRpY2F0ZSBpc3N1ZXMgd2l0aCB0aGUgcnVudGltZSBvciBjb25maWd1cmF0aW9uLiIsInN1bW1hcnkiOiJIaWdoIEthdGEgUmVtb3RlIFdvcmtsb2FkIEZhaWx1cmUgUmF0aW8ifSwiZXhwciI6ImthdGFfcmVtb3RlX3dvcmtsb2FkX2ZhaWx1cmVfcmF0aW8gXHUwMDNlIDI1IiwiZm9yIjoiMzBtIiwibGFiZWxzIjp7InNldmVyaXR5Ijoid2FybmluZyJ9fSx7ImFsZXJ0Ijoia2F0YV9hY3RpdmVfaW5zdGFuY2UiLCJhbm5vdGF0aW9ucyI6eyJzdW1tYXJ5IjoiS2F0YSBpbnN0YW5jZSBhbGl2ZSBzaWduYWwifSwiZXhwciI6InZlY3RvcigxKSIsImxhYmVscyI6eyJwdXJwb3NlIjoiYWxpdmVfc2lnbmFsIiwic2V2ZXJpdHkiOiJpbmZvIn19XX1dfX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlByb21ldGhldXNSdWxlIiwibWV0YWRhdGEiOnsibmFtZSI6InByb21ldGhldXMtc2FuZGJveGVkLWNvbnRhaW5lcnMtcnVsZXMifSwic3BlYyI6eyJncm91cHMiOlt7Im5hbWUiOiJrYXRhX21vbml0b3JfcnVsZXMiLCJydWxlcyI6W3siZXhwciI6InN1bShrYXRhX21vbml0b3JfcnVubmluZ19zaGltX2NvdW50KSIsInJlY29yZCI6ImNsdXN0ZXI6a2F0YV9tb25pdG9yX3J1bm5pbmdfc2hpbV9jb3VudDpzdW0ifV19XX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7InJlbGVhc2UiOiJwcm9tZXRoZXVzLW9wZXJhdG9yIn0sIm5hbWUiOiJvcGVyYXRvci1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7ImludGVydmFsIjoiMzBzIiwicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6IjgwOTEiLCJzY3JhcGVUaW1lb3V0IjoiMTBzIn1dLCJzZWxlY3RvciI6eyJtYXRjaExhYmVscyI6eyJhcHAiOiJvcGVyYXRvci1tZXRyaWNzLXNlcnZlciJ9fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sInNwZWMiOnsiZW5kcG9pbnRzIjpbeyJwb3J0IjoibWV0cmljcyJ9XSwibmFtZXNwYWNlU2VsZWN0b3IiOnsibWF0Y2hOYW1lcyI6WyJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtb3BlcmF0b3IiXX0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibWV0cmljcy1yZWFkZXIifSwicnVsZXMiOlt7Im5vblJlc291cmNlVVJMcyI6WyIvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtb25pdG9yLXJvbGUifSwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInNlcnZpY2VzIiwiZW5kcG9pbnRzIiwicG9kcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX1dfQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibW9uaXRvci1yb2xlYmluZGluZyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im1vbml0b3Itcm9sZSJ9LCJzdWJqZWN0cyI6W3sia2luZCI6IlNlcnZpY2VBY2NvdW50IiwibmFtZSI6InByb21ldGhldXMtazhzIiwibmFtZXNwYWNlIjoib3BlbnNoaWZ0LW1vbml0b3JpbmcifV19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogMjkwZjQ5NDcua2F0YWNvbmZpZ3VyYXRpb24ub3BlbnNoaWZ0LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7Im5hbWUiOiJtYW5hZ2VyLWNvbmZpZyJ9fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": ""
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc3ZjIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjg0NDMsInByb3RvY29sIjoiVENQIiwidGFyZ2V0UG9ydCI6Imh0dHBzIn1dLCJzZWxlY3RvciI6eyJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19"
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwIjoib3BlcmF0b3ItbWV0cmljcy1zZXJ2ZXIifSwibmFtZSI6Im9wZXJhdG9yLW1ldHJpY3Mtc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJwb3J0Ijo4MDkxLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOjgwOTF9XSwic2VsZWN0b3IiOnsiYXBwIjoib3BlcmF0b3ItbWV0cmljcy1zZXJ2ZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsibmFtZSI6Im9wZW5zaGlmdC1zYW5kYm94ZWQtY29udGFpbmVycy1tb25pdG9yIn0sIm5hbWUiOiJtZXRyaWNzIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJtZXRyaWNzIiwicG9ydCI6ODA5MCwicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjowfV0sInNlbGVjdG9yIjp7Im5hbWUiOiJvcGVuc2hpZnQtc2FuZGJveGVkLWNvbnRhaW5lcnMtbW9uaXRvciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ=="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoid2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0="
            }
        },
        {
            "type": "olm.bundle.object",
            "value": {
                "data": "eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZUFjY291bnQiLCJtZXRhZGF0YSI6eyJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im1vbml0b3IifX0="
            }
        }
    ],
    "relatedImages": [
        {
            "name": "caa",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-rhel9@sha256:b60d496e174089eb52d3fe199ee9a2ba8cba9db7b30554904dacc68cb0495d89"
        },
        {
            "name": "peerpods_webhook",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-cloud-api-adaptor-webhook-rhel9@sha256:ed1b6d4d4bdb15000c54b290aad62ddc51d1d9ab77da14fda6b71735c58e14fb"
        },
        {
            "name": "kata_monitor",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-monitor-rhel9@sha256:da4f078f8270fc4a349d6f31ff477f9b4b591839bb39ef96c48255b9b8987b0d"
        },
        {
            "name": "",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-operator-bundle@sha256:a37f38455aff326ef87ba4cef4c4c6268351f665265321f39d9e033de819cd69"
        },
        {
            "name": "podvm_builder",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-podvm-builder-rhel9@sha256:fc02b09c4c0d4685346e1d7df9182ed893dfcbc60d6975a1027888f4ae242390"
        },
        {
            "name": "podvm_payload",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-podvm-payload-rhel9@sha256:c284688e1bbe2e768838e4c7a9482a211aef86b61de09ec0defb17994c60e8ed"
        },
        {
            "name": "manager",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-rhel9-operator@sha256:8a77da09b0e0713c5cb49b92c9b5764d354e5de4b4f07d5445f2d0c677ecd748"
        },
        {
            "name": "metrics-server",
            "image": "registry.redhat.io/openshift-sandboxed-containers/osc-rhel9-operator@sha256:8a77da09b0e0713c5cb49b92c9b5764d354e5de4b4f07d5445f2d0c677ecd748"
        }
    ]
}
{
    "schema": "olm.deprecations",
    "package": "sandboxed-containers-operator",
    "entries": [
        {
            "reference": {
                "schema": "olm.channel",
                "name": "preview-1.0"
            },
            "message": "The preview-1.0 channel is deprecated. Please use the 'stable' channel for the latest supported version.\n"
        },
        {
            "reference": {
                "schema": "olm.channel",
                "name": "preview-1.1"
            },
            "message": "The preview-1.1 channel is deprecated. Please use the 'stable' channel for the latest supported version.\n"
        },
        {
            "reference": {
                "schema": "olm.channel",
                "name": "stable-1.2"
            },
            "message": "The stable-1.2 channel is deprecated. Please use the 'stable' channel for the latest supported version.\n"
        },
        {
            "reference": {
                "schema": "olm.channel",
                "name": "stable-1.3"
            },
            "message": "The stable-1.3 channel is deprecated. Please use the 'stable' channel for the latest supported version.\n"
        },
        {
            "reference": {
                "schema": "olm.bundle",
                "name": "sandboxed-containers-operator.v1.5.0"
            },
            "message": "This bundle is deprecated. Please use the latest stable bundle instead.\n"
        },
        {
            "reference": {
                "schema": "olm.bundle",
                "name": "sandboxed-containers-operator.v1.5.1"
            },
            "message": "This bundle is deprecated. Please use the latest stable bundle instead.\n"
        },
        {
            "reference": {
                "schema": "olm.bundle",
                "name": "sandboxed-containers-operator.v1.5.2"
            },
            "message": "This bundle is deprecated. Please use the latest stable bundle instead.\n"
        },
        {
            "reference": {
                "schema": "olm.bundle",
                "name": "sandboxed-containers-operator.v1.5.3"
            },
            "message": "This bundle is deprecated. Please use the latest stable bundle instead.\n"
        },
        {
            "reference": {
                "schema": "olm.bundle",
                "name": "sandboxed-containers-operator.v1.6.0"
            },
            "message": "This bundle is deprecated. Please use the latest stable bundle instead.\n"
        }
    ]
}
